/*
Written by:
Andre Chen

A lone spaceship tries to cross an asteroid field, harvesting minerals and powerups to upgrade
itself along the way in order to survive the deadly asteroids.

Advanced features implemented:
 * Special visual effects (screen shakes and animated explosions) TODO
 * Sound and music PROBABLYNOTGONNADO
 * Massive number of active discernable sprites
 * Scrolling background TODO
 * Non-constant velocity using WASD
 * In-flight projectiles triggered by player input
 * Power-ups
 * Complex scoring system (buy upgrades to improve situation)

How to play the game:
 * Use WASD to move, I to fire, JL to rotate ship, and 1-5 to buy stat upgrades.
 * Shoot asteroids to gain minerals, which are used to buy stat upgrades.
 * Special asteroids can drop items like health kits, mario super stars, or instant stat upgrades.
 * Asteroids get stronger and more frequent as the game progresses.
 * Survive until the end to win--but beware it gets kinda crazy.

The whole game is in one file because it's of school's submission requirements.
Intended to run on https://cpulator.01xz.net/?sys=arm-de1soc
*/

.data
// types and global data here ======================================================================

// PS/2 FIFO address
.EQU REG_PS2_FIFO, 0xff200108 // &Fifo
.EQU FIFO_FIELD_NEXT, 0
.EQU FIFO_FIELD_BUFFERSIZE, 2

// let mut make = true; // see updateKeyboard State
	.byte 0x1
// let mut extended = false; // see updateKeyboardState
	.byte 0x0
// Use the keyboardState label to refer to these registers
.EQU KEYBOARDSTATE_OFFSETFOR_MAKE, -2
.EQU KEYBOARDSTATE_OFFSETFOR_EXTENDED, -1

/*
struct KeyState {
	pressed: bit,
	changed: bit,
}
// each KeyState is one byte
*/
.EQU KEYSTATE_BITINDEXOF_PRESSED, 0
.EQU KEYSTATE_BITINDEXOF_CHANGED, 1

// let mut keyboardState: &[keyState; 512];
// the index of a certain keyState in this array is equal to its PS/2 scan code, except for extended
// keys, whose indices are their scan codes + 256
keyboardState:
	.skip KEYBOARDSTATE_SIZE
.EQU KEYBOARDSTATE_INDEXOF_ESC, 0x76
.EQU KEYBOARDSTATE_INDEXOF_SPACE, 0x29
.EQU KEYBOARDSTATE_INDEXOF_W, 0x1d
.EQU KEYBOARDSTATE_INDEXOF_A, 0x1c
.EQU KEYBOARDSTATE_INDEXOF_S, 0x1b
.EQU KEYBOARDSTATE_INDEXOF_D, 0x23
.EQU KEYBOARDSTATE_INDEXOF_I, 0x43
.EQU KEYBOARDSTATE_INDEXOF_J, 0x3b
.EQU KEYBOARDSTATE_INDEXOF_K, 0x42
.EQU KEYBOARDSTATE_INDEXOF_L, 0x4b
.EQU KEYBOARDSTATE_INDEXOF_ZERO, 0x45
.EQU KEYBOARDSTATE_INDEXOF_ONE, 0x16
.EQU KEYBOARDSTATE_INDEXOF_TWO, 0x1e
.EQU KEYBOARDSTATE_INDEXOF_THREE, 0x26
.EQU KEYBOARDSTATE_INDEXOF_FOUR, 0x25
.EQU KEYBOARDSTATE_INDEXOF_FIVE, 0x2e
.EQU KEYBOARDSTATE_INDEXOF_SIX, 0x36
.EQU KEYBOARDSTATE_INDEXOF_SEVEN, 0x3d
.EQU KEYBOARDSTATE_INDEXOF_EIGHT, 0x2e
.EQU KEYBOARDSTATE_INDEXOF_NINE, 0x46
.EQU KEYBOARDSTATE_SIZE, 512

/*
type TextBuffer = [[u8; TEXT_WIDTH]; TEXT_HEIGHT]; // not a regular array;
// the row index can take up 6 bits, the column index can take up 7 bits
// Interpreting buffer as a pointer, the byte at (r, c) is at `buffer + r << 7 + c`.
// Give it a size of 0x2000 (1 << 13)
}
*/
.EQU TEXTBUFFER_ROWSHIFT, 7 // uint
.EQU TEXT_WIDTH, 80 // uint
.EQU TEXT_HEIGHT, 60 // uint

// text buffer address
.EQU TEXT_BUFFER, 0xc9000000 // &TextBuffer

/*
type PixBuffer = [[u16; PIX_WIDTH]; PIX_HEIGHT], // not a regular array;
// the row index can take up 8 bits, the column index can take up 9 bits
// Interpreting buffer as a pointer, the color at (r, c) is at `buffer + r << 10 + c << 1`.
// Give it a size of 1 << 18.
}
*/
.EQU PIX_WIDTH, 320 // uint
.EQU PIX_HEIGHT, 240 // uint
.EQU PIXBUFFER_SIZE, 1 << 18 // uint
.EQU PIXBUFFER_ROWSHIFT, 10

/*
struct PixStatus {
	// irrelvant fields here
	isSwapping: bit
}
// All we need to know is that it's a 32-bit register whose 0th bit holds the status of whether a
// swap is in progress.
*/
.EQU PIXSTATUS_BITINDEXOF_ISSWAPPING, 0

// VGA controller interface
.EQU REG_PIX_FRONTBUFFER, 0xff203020 // &&PixBuffer
.EQU REG_PIX_BACKBUFFER, 0xff203024 // &&PixBuffer
.EQU REG_PIX_STATUS, 0xff20302c // &PixStatus

// let bufferA: &PixBuffer;
.align 2 // aligned to word because of str instruction in clearVga
bufferA:
	.skip PIXBUFFER_SIZE

// let bufferB: &PixBuffer;
.align 2 // aligned to word because of str instruction in clearVga
bufferB:
	.skip PIXBUFFER_SIZE

/*
struct Entity {
	lifetime: i32,
	// lifetime can be any value depending on the struct. The only requirement is that a 0 be used
	// to indicate a dead Entity. In essence, every Entity is an optional value.
	xPos: i32,
	yPos: i32,
	xVel: i16,
	yVel: i16,
}
*/
.EQU ENTITY_FIELD_LIFETIME, 0
.EQU ENTITY_FIELD_XPOS, 4
.EQU ENTITY_FIELD_YPOS, 8
.EQU ENTITY_FIELD_XVEL, 12
.EQU ENTITY_FIELD_YVEL, 14
.EQU ENTITY_SIZE, 16

/*
struct Ship extends Entity {
	health: i16,
	maxHealth: i16,
	bulletSpeed: i16,
	bulletDamage: i16,
	maxSpeed: i16,
	currentFireCooldown: i8,
	fireRate: i8,
	direction: i8,
}
// ships have their anchor in the center
*/
.EQU SHIP_FIELD_HEALTH, ENTITY_SIZE
.EQU SHIP_FIELD_MAXHEALTH, ENTITY_SIZE + 2
.EQU SHIP_FIELD_BULLETSPEED, ENTITY_SIZE + 4
.EQU SHIP_FIELD_BULLETDAMAGE, ENTITY_SIZE + 6
.EQU SHIP_FIELD_MAXSPEED, ENTITY_SIZE + 8
.EQU SHIP_FIELD_CURRENTFIRECOOLDOWN, ENTITY_SIZE + 10
.EQU SHIP_FIELD_FIRERATE, ENTITY_SIZE + 11
.EQU SHIP_FIELD_DIRECTION, ENTITY_SIZE + 12
.EQU SHIP_SIZE, ENTITY_SIZE + 13

// constants about the ship sprite (not associated with the Ship data type)
.EQU SHIP_RADIUS, 16 * 8

// let ship: &Ship;
.align 2
ship:
	.word 1
	.word 160 * 8, 120 * 8
	.hword 0, 0
	.hword 100, 100, 12 * 8, 50, 8 * 8
	.byte 0, 30, 0

/*
struct CostumedEntity extends Entity {
	costume: &Pixmap,
}
*/
.EQU COSTUMEDENTITY_FIELD_COSTUME, ENTITY_SIZE
.EQU COSTUMEDENTITY_SIZE, ENTITY_SIZE + 4

/*
struct Bullet extends CostumedEntity {
	radius: i16,
	damage: i16,
}
*/
.EQU BULLET_FIELD_RADIUS, COSTUMEDENTITY_SIZE
.EQU BULLET_FIELD_DAMAGE, COSTUMEDENTITY_SIZE + 2
.EQU BULLET_SIZE, COSTUMEDENTITY_SIZE + 4

/*
struct Asteroid extends CostumedEntity {
	originalHealth: i16,
	health: i16,
	size: i8,
	isSpecial: bool,
*/
.EQU ASTEROID_FIELD_ORIGINALHEALTH, COSTUMEDENTITY_SIZE
.EQU ASTEROID_FIELD_HEALTH, COSTUMEDENTITY_SIZE + 2
.EQU ASTEROID_FIELD_SIZE, COSTUMEDENTITY_SIZE + 4
.EQU ASTEROID_FIELD_ISSPECIAL, COSTUMEDENTITY_SIZE + 5
.EQU ASTEROID_SIZE, COSTUMEDENTITY_SIZE + 8 // padding to align subsequent objects

/*
struct Item extends CostumedEntity {
	itemType: enum ItemType {
		HealthKit,
		Mineral,
		Invulnerability,
		UpgradeMaxHealth,
		UpgradeBulletSpeed,
		UpgradeBulletDamage,
		UpgradeFireRate,
		UpgradeMaxSpeed,
	} // underlying type u8
}
*/
.EQU ITEM_FIELD_ITEMTYPE, COSTUMEDENTITY_SIZE
.EQU ITEM_SIZE, COSTUMEDENTITY_SIZE + 4 // add padding to align subsequent objects
.EQU ITEMTYPE_VARIANT_MINERAL, 0
.EQU ITEMTYPE_VARIANT_HEALTHKIT, 1
.EQU ITEMTYPE_VARIANT_INVULNERABILITY, 2
.EQU ITEMTYPE_VARIANT_UPGRADEMAXHEALTH, 3
.EQU ITEMTYPE_VARIANT_UPGRADEBULLETSPEED, 4
.EQU ITEMTYPE_VARIANT_UPGRADEBULLETDAMAGE, 5
.EQU ITEMTYPE_VARIANT_UPGRADEFIRERATE, 6
.EQU ITEMTYPE_VARIANT_UPGRADEMAXSPEED, 7

/*
struct Csb<T> {
	elementSize: u32,
	capacity: u32,
	begin: u32,
	end: u32,
	data: [T; capacity], // variable length array
}
// Csb stands for "circular sparse buffer." The buffer is circular; an iterator that is incremented to
// equal the capacity will wrap around to the beginning of the array. The "sparse" comes from the
// fact that during iteration, some elements are skipped (considered "dead") depending on if first
// word is 0. Therefore, T must be a type with at least size 4.
// Because of how the circular buffer works, the actual capacity is buff.capacity - 1.
// A full-capacity buffer would have the begin and end iterators at the same position, but that
// would actually indicate an empty buffer.
*/
.EQU CSB_FIELD_ELEMENTSIZE, 0
.EQU CSB_FIELD_CAPACITY, 4
.EQU CSB_FIELD_BEGIN, 8
.EQU CSB_FIELD_END, 12
.EQU CSB_FIELD_DATA, 16

// let bulletBuff: &Csb<Bullet>;
.align 2
bulletBuff:
	.word BULLET_SIZE
	.word 64
	.word 0
	.word 0
	.skip 64 * BULLET_SIZE

// let asteroidBuff: &Csb<Asteroid>;
.align 2
asteroidBuff:
	.word ASTEROID_SIZE
	.word 32
	.word 0
	.word 0
	.skip 32 * ASTEROID_SIZE

// let itemBuff: &Csb<Item>;
.align 2
itemBuff:
	.word ITEM_SIZE
	.word 64
	.word 0
	.word 0
	.skip 64 * ITEM_SIZE

// let mineralBank: u32 = 0;
.align 2
mineralBank:
	.word 0

// let mut tick: u32 = 0;
.align 2
tick:
	.word 0

/*
struct DifficultyEntry {
	baseCometCountdown: i32, // positive only
	baseAsteroidCountdown: i32, // positive only
	largeAsteroidChance: u32, // will spawn a large asteroid if the rng generates a u32 smaller than
	medAsteroidChance: u32, // will spawn a med asteroid if rng generates u32 smaller than this but larger than largeAsteroidChance
	rangeXVel: i16, // magnitude of xVel will not exceed this, positive only
	baseYVel: i16 // positive only
	baseAsteroidHealth: i16, // positive only
}
*/
.EQU DIFFICULTYENTRY_FIELD_BASECOMETCOUNTDOWN, 0
.EQU DIFFICULTYENTRY_FIELD_BASEASTEROIDCOUNTDOWN, 4
.EQU DIFFICULTYENTRY_FIELD_LARGEASTEROIDCHANCE, 8
.EQU DIFFICULTYENTRY_FIELD_MEDASTEROIDCHANCE, 12
.EQU DIFFICULTYENTRY_FIELD_RANGEXVEL, 16
.EQU DIFFICULTYENTRY_FIELD_BASEYVEL, 18
.EQU DIFFICULTYENTRY_FIELD_BASEASTEROIDHEALTH, 20
.EQU DIFFICULTYENTRY_SIZE, 24 // add padding

// let difficultyTable: &[DifficultyEntry; 10];
.align 2
difficultyTable:
	.word -1, 50, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 45, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 41, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 37, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 33, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 30, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 27, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 24, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 22, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 20, 0, 0
	.hword 8, 8, 3
	.skip 2
	.word -1, 18, 0, 0
	.hword 8, 8, 3
	.skip 2
	// TODO add more entries

.align 2
// let difficulty = &DifficultyEntry;
difficulty:
	.word difficultyTable

/*
enum GameState {
	StartScreen,
	InGame,
	Paused,
	DeathScreen,
} // underlying type u8
*/
.EQU GAMESTATE_VARIANT_DEATHSCREEN, 0
.EQU GAMESTATE_VARIANT_STARTSCREEN, 1
.EQU GAMESTATE_VARIANT_INGAME, 2
.EQU GAMESTATE_VARIANT_PAUSED, 3

// let mut gameState: &GameState = GameState::StartScreen;
gameState:
	.byte GAMESTATE_VARIANT_STARTSCREEN

.text
// functions here ==================================================================================

/*
fn _start();
*/
.global _start
_start:
	// initialize stack pointer
	mov sp, #0x800000

	bl setUpDoubleBuffer

	// call main
	bl main

	// idk what to do if execution gets here so just do a useless loop
_start_uselessLoop:
	ror r0, r0, #1
	b _start_uselessLoop
// end _start

/*
fn main();
*/
main:
	push {r4, r5, lr}

	ldr r4, =REG_PIX_BACKBUFFER

main_loop:
	bl updateKeyboardState

	bl advanceFrame

	// render frame
	bl waitVsync
	ldr r0, [r4]
	bl renderFrame
	bl swapBuffers

	b main_loop

	pop {r4, r5, lr}
// end main

/*
advanceFrame: changes the game state to reflect the next frame

fn advanceFrame() {
	processPlayerInput();
	moveEntities();
	processCollisions();
	trimCsb(bulletBuff);
	trimCsb(asteroidBuff);
	trimCsb(itemBuff);

	if gameState == GameState::InGame {
		asteroidSpawner();
		tick += 1;
		if tick % 1024 == 0 {
			difficulty = difficulty + DifficultyEntry::size;
		}
	}
}
*/
advanceFrame:
	push {r4-r6, lr}

	bl processPlayerInput

	bl moveEntities

	bl processCollisions

	ldr r0, =bulletBuff
	bl trimCsb
	ldr r0, =asteroidBuff
	bl trimCsb
	ldr r0, =itemBuff
	bl trimCsb

	ldr r0, =gameState
	ldr r0, [r0]
	cmp r0, #GAMESTATE_VARIANT_INGAME
	bne advanceFrame_noTick

	bl asteroidSpawner

	// r1 = tick
	ldr r0, =tick
	ldr r1, [r0]
	add r1, r1, #1
	str r1, [r0]

	// r1 = ???
	lsls r2, r1, #22 // leave only the last 10 bits to test
	bne advanceFrame_noIncreaseDifficulty
	ldr r0, =difficulty
	ldr r1, [r0]
	add r1, r1, #DIFFICULTYENTRY_SIZE
	str r1, [r0]
advanceFrame_noIncreaseDifficulty:

advanceFrame_noTick:

	pop {r4-r6, pc}
// end advanceFrame

/*
asteroidSpawner: either counts down a timer for the next asteroid spawn, or if the timer has just
run out, spawns an asteroid and sets up the next spawn

fn asteroidSpawner() {
	let static mut countdown = 50;

	countdown -= 1;
	if countdown > 0 {
		return
	}

	countdown = difficulty.baseAsteroidCountdown * (1 + (rand() as fixpt32_32) / 4);

	let asteroid = addSpace(asteroidBuff)
	asteroid.lifetime = 512;
	asteroid.originalHealth = difficulty.baseAsteroidHealth * (1 + (rand() as fixpt32_32) / 4);
	asteroid.health = asteroid.originalHealth;
	asteroid.size = match rand() {
		0..difficulty.largeAsteroidChance => 8,
		0..difficulty.medAsteroidChance => 7,
		_ => 6,
	};
	asteroid.costume = asteroidSkin; // TODO fix to reflect actual size
	asteroid.yVel = difficulty.baseYVel * (1 + (rand() as fixpt32_32) / 4);
	let asteroid.yPos = -32 * 8;
	let xVelScale = rand() as fixpt32_32;
	asteroid.xVel = difficulty.rangeXVel * xVelScale * if (xVelScale as u32) & 1 { -1 } else { 1 };
	let asteroid.xPos = (PIX_WIDTH * 8) * (rand() as fixpt32_32) + asteroid.xVel * 64;
	asteroid.isSpecial = rand() < 1 << 31;
}
*/
asteroidSpawner_countdown:
	.word 50
asteroidSpawner:
	ldr r0, asteroidSpawner_countdown
	subs r0, r0, #1
	str r0, asteroidSpawner_countdown
	bxgt lr

	push {r4-r6, lr}

	// r4 = difficulty, r5 = asteroid
	ldr r4, =difficulty
	ldr r4, [r4]
	ldr r0, =asteroidBuff
	bl addSpace
	mov r5, r0

	mov r0, #512
	str r0, [r5, #ENTITY_FIELD_LIFETIME]

	bl rand // r0 = rand() as fixpt32_32
	ldr r1, [r4, #DIFFICULTYENTRY_FIELD_BASEASTEROIDCOUNTDOWN] // r1 = baseAsteroidCountdown
	asr r2, r1, #2 // r2 = baseAsteroidCountdown / 4
	umull r2, r3, r0, r2 // umull in order to treat r0 as a fixed point value
	add r1, r1, r3
	str r1, asteroidSpawner_countdown

	bl rand
	ldrsh r1, [r4, #DIFFICULTYENTRY_FIELD_BASEASTEROIDHEALTH]
	asr r2, r1, #2
	umull r2, r3, r0, r2 // okay because r2 is only ever going to be positive
	add r1, r1, r3
	strh r1, [r5, #ASTEROID_FIELD_HEALTH]
	strh r1, [r5, #ASTEROID_FIELD_ORIGINALHEALTH]

	// r0 = asteroid.size
	bl rand
	ldr r1, [r4, #DIFFICULTYENTRY_FIELD_LARGEASTEROIDCHANCE]
	cmp r0, r1
	movlo r0, #8
	blo asteroidSpawner_astSizeFound
	ldr r1, [r4, #DIFFICULTYENTRY_FIELD_MEDASTEROIDCHANCE]
	cmp r0, r1
	movlo r0, #7
	blo asteroidSpawner_astSizeFound
	mov r0, #6
asteroidSpawner_astSizeFound:
	strb r0, [r5, #ASTEROID_FIELD_SIZE]

	ldr r0, =asteroidSkin
	str r0, [r5, #COSTUMEDENTITY_FIELD_COSTUME]

	// r0 = ???
	bl rand
	ldrsh r1, [r4, #DIFFICULTYENTRY_FIELD_BASEYVEL]
	asr r2, r1, #2
	umull r2, r3, r0, r2
	add r1, r1, r3
	strh r1, [r5, #ENTITY_FIELD_YVEL]

	ldr r0, =(-16 * 8)
	str r0, [r5, #ENTITY_FIELD_YPOS]

	// r6 = asteroid.xVel
	bl rand
	ldrsh r1, [r4, #DIFFICULTYENTRY_FIELD_RANGEXVEL]
	umull r2, r6, r0, r1 // r6 = magnitude of xVel
	tst r0, #0x1
	rsbne r6, r6, #0 // flip if the first bit is 1
	strh r6, [r5, #ENTITY_FIELD_XVEL]

	bl rand
	ldr r1, =(PIX_WIDTH * 8)
	umull r2, r3, r0, r1 // r3 = base xPos
	mov r0, #64
	smull r1, r2, r0, r6 // r2 = offset based on xVel
	add r3, r3, r2
	str r3, [r5, #ENTITY_FIELD_XPOS]

	bl rand
	cmp r0, #(1 << 31)
	mov r0, #0
	movlo r0, #1
	strb r0, [r5, #ASTEROID_FIELD_ISSPECIAL]

	pop {r4-r6, pc}
// end asteroidSpawner

/*
processPlayerInput: changes the ship's velocity and direction based on WASD and IJKL states

fn processPlayerInput() {
	ship.direction = (keyboardState.L.pressed as i32) - (keyboardState.J.pressed as i32);

	let xMove = (keyboardState.D.pressed as i32) - (keyboardState.A.pressed as i32);
	if xMove != 0 {
		ship.xVel += xMove * 16;
		if ship.xVel > ship.maxSpeed {
			ship.xVel = ship.maxSpeed;
		} else if ship.xVel < -ship.maxSpeed {
			ship.xVel = -ship.maxSpeed;
		}
	} else {
		ship.xVel -= sign(ship.xVel) * 3;
	}

	// same for yVel

	if ship.currentFireCoolDown <= 0 && keyboardState.I.pressed {
		ship.currentFireCooldown += 100;
		spawnBullet(ship);
	}

	if keyboardState.K.changed && keyboardState.K.pressed {
		spawnAsteroid();
	}

	if
		(gameState == GameState::DeathScreen || gameState == GameState::StartScreen) &&
		keyboardState.space.changed && keyboardState.space.pressed
	{
		startGame();
	}
}
*/
processPlayerInput:
	push {r4-r5, lr}

	// r4 = keyboardState
	ldr r4, =keyboardState

	// r5 = ship
	ldr r5, =ship

	// ship.direction = (keyboardState.L.pressed as i32) - (keyboardState.J.pressed as i32);
	ldrb r1, [r4, #KEYBOARDSTATE_INDEXOF_L]
	and r1, r1, #0x1
	ldrb r2, [r4, #KEYBOARDSTATE_INDEXOF_J]
	and r2, r2, #0x1
	sub r1, r1, r2
	strb r1, [r5, #SHIP_FIELD_DIRECTION]

	// r1 = xMove
	ldrb r1, [r4, #KEYBOARDSTATE_INDEXOF_D]
	and r1, r1, #0x1
	ldrb r2, [r4, #KEYBOARDSTATE_INDEXOF_A]
	and r2, r2, #0x1
	sub r1, r1, r2

	// r2 = ship.xVel
	ldrsh r2, [r5, #ENTITY_FIELD_XVEL]

	// if xMove != 0
	cmp r1, #0 // TODO optimize out?
	beq processPlayerInput_dampenX

	add r2, r2, r1, lsl #4
	// r3 = ship.maxSpeed
	ldrsh r3, [r5, #SHIP_FIELD_MAXSPEED]
	cmp r2, r3
	bgt processPlayerInput_exceededMaxXVel
	rsb r3, r3, #0
	cmp r2, r3
	bge processPlayerInput_withinXVel
processPlayerInput_exceededMaxXVel:
	mov r2, r3
processPlayerInput_withinXVel:

	b processPlayerInput_xVelCalcsDone
processPlayerInput_dampenX:

	// r3 = -sign(ship.xVel);
	cmp r2, #0
	movlt r3, #3
	movgt r3, #-3
	moveq r3, #0

	add r2, r2, r3

processPlayerInput_xVelCalcsDone:
	// restore ship.xVel to memory
	strh r2, [r5, #ENTITY_FIELD_XVEL]

	// r1 = yMove
	ldrb r1, [r4, #KEYBOARDSTATE_INDEXOF_S]
	and r1, r1, #0x1
	ldrb r2, [r4, #KEYBOARDSTATE_INDEXOF_W]
	and r2, r2, #0x1
	sub r1, r1, r2

	// r2 = ship.yVel
	ldrsh r2, [r5, #ENTITY_FIELD_YVEL]

	// if yMove != 0
	cmp r1, #0
	beq processPlayerInput_dampenY

	add r2, r2, r1, lsl #4
	// r3 = ship.maxSpeed
	ldrsh r3, [r5, #SHIP_FIELD_MAXSPEED]
	cmp r2, r3
	bgt processPlayerInput_exceededMaxYVel
	rsb r3, r3, #0
	cmp r2, r3
	bge processPlayerInput_withinMaxYVel
processPlayerInput_exceededMaxYVel:
	mov r2, r3
processPlayerInput_withinMaxYVel:

	b processPlayerInput_yVelCalcsDone
processPlayerInput_dampenY:

	// r3 = -sign(ship.yVel):
	cmp r2, #0
	movlt r3, #3
	movgt r3, #-3
	moveq r3, #0

	add r2, r2, r3

processPlayerInput_yVelCalcsDone:
	// restore ship.yVel to memory
	strh r2, [r5, #ENTITY_FIELD_YVEL]

	// fire bullet
	ldrsb r0, [r5, #SHIP_FIELD_CURRENTFIRECOOLDOWN]
	cmp r0, #0
	bgt processPlayerInput_noFire
	ldrb r1, [r4, #KEYBOARDSTATE_INDEXOF_I]
	ands r1, r1, #1
	beq processPlayerInput_noFire
	ldrsb r0, [r5, #SHIP_FIELD_CURRENTFIRECOOLDOWN] // TODO optimize out?
	add r0, r0, #100
	strb r0, [r5, #SHIP_FIELD_CURRENTFIRECOOLDOWN]
	mov r0, r5
	bl spawnBullet
processPlayerInput_noFire:

	// spawn asteroid
	ldrb r1, [r4, #KEYBOARDSTATE_INDEXOF_K]
	cmp r1, #3
	bleq spawnAsteroid

	// start game
	ldrb r1, [r4, #KEYBOARDSTATE_INDEXOF_SPACE]
	cmp r1, #3
	bne processPlayerInput_noStart
	ldr r1, =gameState
	ldrb r1, [r1]
	cmp r1, #GAMESTATE_VARIANT_STARTSCREEN
	bhi processPlayerInput_noStart
	bl startGame
processPlayerInput_noStart:

	pop {r4-r5, pc}
// end processPlayerInput

/*
fn startGame() {
	gameState = GameState::InGame;

	if ship.lifetime == 0 {
		ship.xPos = 160 * 8;
		ship.yPos = 200 * 8;
		ship.xVel = 0;
		ship.yVel = 0;
		ship.direction = 0;
	}
	ship.lifetime = 1;
	ship.health = 20;
	ship.maxHealth = 20;
	ship.bulletSpeed = 4 * 8;
	ship.bulletDamage = 3;
	ship.currentFireCooldown = 0;
	ship.fireRate = 5;
	ship.maxSpeed = 2 * 8;

	gameState = GameState::InGame;
}
*/
startGame:
	// gameState = GameState::InGame;
	mov r0, #GAMESTATE_VARIANT_INGAME
	ldr r1, =gameState
	strb r0, [r1]

	// set ship stats

	// r0 = ship
	ldr r0, =ship
	ldr r1, [r0, #ENTITY_FIELD_LIFETIME]
	cmp r1, #0
	bne startGame_shipStillPresent

	mov r1, #(160 * 8)
	str r1, [r0, #ENTITY_FIELD_XPOS]
	mov r1, #(200 * 8)
	str r1, [r0, #ENTITY_FIELD_YPOS]
	mov r1, #0
	strh r1, [r0, #ENTITY_FIELD_XVEL]
	strh r1, [r0, #ENTITY_FIELD_XVEL]
	strb r1, [r0, #SHIP_FIELD_DIRECTION]

startGame_shipStillPresent:

	mov r1, #1
	str r1, [r0, #ENTITY_FIELD_LIFETIME]
	mov r1, #20
	strh r1, [r0, #SHIP_FIELD_HEALTH]
	strh r1, [r0, #SHIP_FIELD_MAXHEALTH]
	mov r1, #(4 * 8)
	strh r1, [r0, #SHIP_FIELD_BULLETSPEED]
	mov r1, #3
	strh r1, [r0, #SHIP_FIELD_BULLETDAMAGE]
	mov r1, #(2 * 8)
	strh r1, [r0, #SHIP_FIELD_MAXSPEED]
	mov r1, #0
	strb r1, [r0, #SHIP_FIELD_CURRENTFIRECOOLDOWN]
	mov r1, #5
	strb r1, [r0, #SHIP_FIELD_FIRERATE]

	// r0 = gameState
	ldr r0, =gameState
	mov r1, #GAMESTATE_VARIANT_INGAME
	strb r1, [r0]

	bx lr
// end startGame

/*
moveEntities: changes every entity's position based on their current velocity. The ship is prevented
from moving off the screen.

fn moveEntities() {
	if ship.currentFireCooldown > 0 {
		ship.currentFireCooldown -= ship.fireRate;
	}
	moveEntityBounded(ship)

	forEach(bulletBuff, moveEntityWithVoid);
	forEach(asteroidBuff, moveEntityWithVoid);
	forEach(itemBuff, moveEntityWithVoid);
}
*/
moveEntities:
	push {lr}

	ldr r0, =ship
	ldrsb r1, [r0, #SHIP_FIELD_CURRENTFIRECOOLDOWN]
	cmp r1, #0
	ble moveEntities_noReduceCooldown
	ldrsb r2, [r0, #SHIP_FIELD_FIRERATE]
	sub r1, r1, r2
	strb r1, [r0, #SHIP_FIELD_CURRENTFIRECOOLDOWN]
moveEntities_noReduceCooldown:
	bl moveEntityBounded

	ldr r0, =bulletBuff
	ldr r1, =moveEntityWithVoid
	bl forEach

	ldr r0, =asteroidBuff
	ldr r1, =moveEntityWithVoid
	bl forEach

	ldr r0, =itemBuff
	ldr r1, =moveEntityWithVoid
	bl forEach

	pop {pc}
// end moveEntities

/*
moveEntityWithVoid: updates the specified Entity's position based on its current velocity. Also
decreases the lifetime of the entity by 1.

fn moveEntityWithVoid(entity: &Entity) {
	if entity.lifetime > 0 {
		entity.lifetime -= 1;
	}

	entity.xPos += entity.xVel;
	entity.yPos += entity.yVel;
}
*/
moveEntityWithVoid:
	// r0 = entity

	ldr r1, [r0, #ENTITY_FIELD_LIFETIME]
	cmp r1, #0
	ble moveEntityWithVoid_noDecreaseLifetime
	sub r1, r1, #1
	str r1, [r0, #ENTITY_FIELD_LIFETIME]
moveEntityWithVoid_noDecreaseLifetime:

	ldr r1, [r0, #ENTITY_FIELD_XPOS]
	ldrsh r2, [r0, #ENTITY_FIELD_XVEL]
	add r1, r1, r2
	str r1, [r0, #ENTITY_FIELD_XPOS]

	ldr r1, [r0, #ENTITY_FIELD_YPOS]
	ldrsh r2, [r0, #ENTITY_FIELD_YVEL]
	add r1, r1, r2
	str r1, [r0, #ENTITY_FIELD_YPOS]

	bx lr
// end moveEntity

/*
moveEntityBounded: updates the specified Entity's position based on its current velocity. Also
prevents the entity from moving off the screen.

fn moveEntityBounded(entity: &Entity) {
	entity.xPos = max(0, min(PIX_WIDTH * 8, entity.xVel));
	entity.yPos = max(0, min(PIX_HEIGHT * 8, entity.yVel));
}
*/
moveEntityBounded:
	// r0 = entity

	ldr r1, [r0, #ENTITY_FIELD_XPOS]
	ldrsh r2, [r0, #ENTITY_FIELD_XVEL]
	adds r1, r1, r2
	movlt r1, #0
	blt moveEntityBounded_doneCalculatingX
	cmp r1, #(PIX_WIDTH * 8)
	movgt r1, #(PIX_WIDTH * 8)
moveEntityBounded_doneCalculatingX:
	str r1, [r0, #ENTITY_FIELD_XPOS]

	ldr r1, [r0, #ENTITY_FIELD_YPOS]
	ldrsh r2, [r0, #ENTITY_FIELD_YVEL]
	adds r1, r1, r2
	movlt r1, #0
	blt moveEntityBounded_doneCalculatingY
	cmp r1, #(PIX_HEIGHT * 8)
	movgt r1, #(PIX_HEIGHT * 8)
moveEntityBounded_doneCalculatingY:
	str r1, [r0, #ENTITY_FIELD_YPOS]

	bx lr
// end moveEntityBounded

/*
processCollisions: checks for collisions between:
	the ship and asteroids
	the ship and items
	asteroids and asteroids
	asteroids and bullets

fn processCollisions() {
	forEachPair(bulletBuff, asteroidBuff, maybeCollideBulletAsteroid);
	forEach(itemBuff, maybeCollideShipItem);
	forEach(asteroidBuff, maybeCollideShipAsteroid);
}
*/
processCollisions:
	push {lr}

	ldr r0, =bulletBuff
	ldr r1, =asteroidBuff
	ldr r2, =maybeCollideBulletAsteroid
	bl forEachPair

	ldr r0, =itemBuff
	ldr r1, =maybeCollideShipItem
	bl forEach

	ldr r0, =asteroidBuff
	ldr r1, =maybeCollideShipAsteroid
	bl forEach

	pop {pc}
// end processCollisions

/*
fn maybeCollideBulletAsteroid(asteroid: &mut Asteroid, bullet: &mut Bullet) {
	if !checkIfWithinDistance(asteroid, bullet, 1 << asteroid.size + bullet.speed) {
		return;
	}

	bullet.lifetime = 0;
	asteroid.health -= bullet.damage;
	if asteroid.health <= 0 {
		destroyAsteroid(asteroid)
	}
}
*/
maybeCollideBulletAsteroid:
	push {r4-r5, lr}

	// r0 = asteroid, r1 = bullet

	// r4 = asteroid, r5 = bullet
	mov r4, r0
	mov r5, r1

	// r0 and r1 already have the right values
	ldrsb r2, [r0, #ASTEROID_FIELD_SIZE]
	mov r3, #1
	lsl r2, r3, r2
	ldrsh r3, [r1, #BULLET_FIELD_RADIUS]
	add r2, r2, r3
	bl checkIfWithinDistance
	cmp r0, #0
	beq maybeCollideBulletAsteroid_done

	mov r0, #0
	str r0, [r5, #ENTITY_FIELD_LIFETIME]
	ldrsh r1, [r4, #ASTEROID_FIELD_HEALTH]
	ldrsh r2, [r5, #BULLET_FIELD_DAMAGE]
	subs r1, r1, r2
	strh r1, [r4, #ASTEROID_FIELD_HEALTH]
	bgt maybeCollideBulletAsteroid_done

	mov r0, r4
	bl destroyAsteroid

maybeCollideBulletAsteroid_done:

	pop {r4-r5, pc}
// end maybeCollideBulletAsteroid

/*
destroyAsteroid: removes an asteroid, and either splits it into two smaller asteroids of one lesser
size (if the size is greater than 3), or turns the asteroid into an item (if the size is not greater
than 3). A special asteroid that splits will have a random one of its children be special.

fn destroyAsteroid(asteroid: &mut Asteroid) {
	if asteroid.size > 6 {
		let left = asteroid;
		let right = addSpace(asteroidBuff);

		left.lifetime = 60;
		right.lifetime = 60;

		right.xPos = left.xPos;
		right.yPos = left.yPos;

		let (oldXVel, oldYVel) = (left.xVel, left.yVel);
		left.xVel = -oldYVel;
		right.xVel = oldYVel;
		left.yVel = oldXVel;
		right.yVel = -oldXVel;

		left.size -= 1;
		right.size = left.size;

		left.originalHealth = left.originalHealth / 2;
		right.originalHealth = left.originalHealth;
		left.health = left.originalHealth;
		right.health = left.health;

		right.isSpecial = false;

		if left.isSpecial {
			if (rand >> 31 as bool) {
				left.isSpecial = false;
				right.isSpecial = true;
			}
		}

		left.costume = asteroidSkinArray[left.isSpecial][left.size];

		right.costume = asteroidSkinArray[right.isSpecial][right.size];
	} else {
		asteroid.lifetime = 0;
		spawnItem(asteroid.xPos, asteroid.yPos, asteroid.isSpecial);
	}
*/
destroyAsteroid:
	push {r4-r5, lr}

	// r0 = asteroid

	ldrsb r1, [r0, #ASTEROID_FIELD_SIZE]
	cmp r1, #6
	bgt destroyAsteroid_split

	// asteroid.lifetime = 0;
	mov r1, #0
	str r1, [r0, #ENTITY_FIELD_LIFETIME]

	// spawnItem(...); r0 = ???
	ldr r1, [r0, #ENTITY_FIELD_YPOS]
	ldrb r2, [r0, #ASTEROID_FIELD_ISSPECIAL]
	ldr r0, [r0, #ENTITY_FIELD_XPOS]
	bl spawnItem

	b destroyAsteroid_done
destroyAsteroid_split:

	// r4 = left, r5 = right, r0 = ???
	mov r4, r0
	ldr r0, =asteroidBuff
	bl addSpace
	mov r5, r0

	mov r0, #60
	str r0, [r4, #ENTITY_FIELD_LIFETIME]
	str r0, [r5, #ENTITY_FIELD_LIFETIME]

	ldr r0, [r4, #ENTITY_FIELD_XPOS]
	str r0, [r5, #ENTITY_FIELD_XPOS]
	ldr r0, [r4, #ENTITY_FIELD_YPOS]
	str r0, [r5, #ENTITY_FIELD_YPOS]

	ldrsh r0, [r4, #ENTITY_FIELD_YVEL] // r0 = oldYVel
	ldrsh r1, [r4, #ENTITY_FIELD_XVEL] // r1 = oldXVel
	strh r0, [r5, #ENTITY_FIELD_XVEL]
	rsb r0, r0, #0
	strh r0, [r4, #ENTITY_FIELD_XVEL]
	strh r1, [r4, #ENTITY_FIELD_YVEL]
	rsb r1, r1, #0
	strh r1, [r5, #ENTITY_FIELD_YVEL]

	ldrb r0, [r4, #ASTEROID_FIELD_SIZE]
	sub r0, r0, #1
	strb r0, [r4, #ASTEROID_FIELD_SIZE]
	strb r0, [r5, #ASTEROID_FIELD_SIZE]

	ldrsh r0, [r4, #ASTEROID_FIELD_ORIGINALHEALTH]
	asr r0, r0, #1
	strh r0, [r4, #ASTEROID_FIELD_ORIGINALHEALTH]
	strh r0, [r5, #ASTEROID_FIELD_ORIGINALHEALTH]
	strh r0, [r4, #ASTEROID_FIELD_HEALTH]
	strh r0, [r5, #ASTEROID_FIELD_HEALTH]

	mov r0, #0
	strb r0, [r5, #ASTEROID_FIELD_ISSPECIAL]

	ldrb r0, [r4, #ASTEROID_FIELD_ISSPECIAL]
	cmp r0, #0
	beq destroyAsteroid_splitSpecialDone

	bl rand
	lsrs r0, r0, #31
	beq destroyAsteroid_splitSpecialDone

	// r0 must be equal to 1 at this point
	strb r0, [r5, #ASTEROID_FIELD_ISSPECIAL]
	mov r0, #0
	strb r0, [r4, #ASTEROID_FIELD_ISSPECIAL]

destroyAsteroid_splitSpecialDone:

	// TODO calculate the correct skin to use
	ldr r0, =asteroidSkin
	str r0, [r4, #COSTUMEDENTITY_FIELD_COSTUME]
	str r0, [r5, #COSTUMEDENTITY_FIELD_COSTUME]

destroyAsteroid_done:

	pop {r4-r5, pc}
// end destroyAsteroid

/*
fn maybeCollideShipItem(item: &mut Item) {
	let distanceSquare = square(item.xPos - ship.xPos) + square(item.yPos - ship.yPos);
	if distanceSquare > square(SHIP_RADIUS) {
		return;
	}

	item.lifetime = 0;
	match item.itemType {
		ItemType::HealthKit => {
			ship.health = ship.maxHealth;
		},
		ItemType::Mineral => {
			mineralBank += 1;
		},
		ItemType::Invulnerability => {
			// do nothing for now
		},
		ItemType::UpgradeMaxHealth => {
			ship.maxHealth += 5;
		},
		ItemType::UpgradeBulletSpeed => {
			ship.bulletSpeed += 1;
		},
		ItemType::UpgradeBulletDamage => {
			ship.bulletDamage += 1;
		},
		ItemType::UpgradeFireRate => {
			ship.fireRate += 1;
		},
		ItemType::UpgradeMaxSpeed => {
			ship.maxSpeed += 1;
		},
	}
}
*/
maybeCollideShipItem:
	push {r4-r5, lr}

	// r4 = item, r5 = ship
	mov r4, r0
	ldr r5, =ship

	// maybe early return

	ldr r0, [r5, #ENTITY_FIELD_LIFETIME]
	cmp r0, #0
	beq maybeCollideShipItem_done

	// r0 = square(item.xPos - ship.xPos)
	ldr r0, [r4, #ENTITY_FIELD_XPOS]
	ldr r1, [r5, #ENTITY_FIELD_XPOS]
	sub r1, r0, r1
	mul r0, r1, r1

	// r1 = square(item.yPos - ship.yPos)
	ldr r1, [r4, #ENTITY_FIELD_YPOS]
	ldr r2, [r5, #ENTITY_FIELD_YPOS]
	sub r2, r1, r2
	mul r1, r2, r2

	// r0 = distanceSquare
	add r0, r0, r1

	// skip if out of range
	mov r1, #SHIP_RADIUS
	mul r2, r1, r1
	cmp r0, r2
	bgt maybeCollideShipItem_done

	// item.lifetime = 0;
	mov r0, #0
	str r0, [r4, #ENTITY_FIELD_LIFETIME]

	// match statement using jump table
	ldrb r0, [r4, #ITEM_FIELD_ITEMTYPE]
	ldr r1, =maybeCollideShipItem_jumpTable
	ldr pc, [r1, r0, lsl #2]

maybeCollideShipItem_caseMineral:

	ldr r0, =mineralBank
	ldr r1, [r0]
	add r1, r1, #1
	str r1, [r0]

	b maybeCollideShipItem_done
maybeCollideShipItem_caseHealthKit:

	ldr r0, =ship
	ldrsh r1, [r0, #SHIP_FIELD_MAXHEALTH]
	strh r1, [r0, #SHIP_FIELD_HEALTH]

	b maybeCollideShipItem_done
maybeCollideShipItem_caseInvulnerability:

	// do nothing

	b maybeCollideShipItem_done
maybeCollideShipItem_caseUpgradeMaxHealth:

	ldr r0, =ship
	ldrsh r1, [r0, #SHIP_FIELD_MAXHEALTH]
	add r1, r1, #1
	strh r1, [r0, #SHIP_FIELD_MAXHEALTH]

	b maybeCollideShipItem_done
maybeCollideShipItem_caseUpgradeBulletSpeed:

	ldr r0, =ship
	ldrsh r1, [r0, #SHIP_FIELD_BULLETSPEED]
	add r1, r1, #1
	strh r1, [r0, #SHIP_FIELD_BULLETSPEED]

	b maybeCollideShipItem_done
maybeCollideShipItem_caseUpgradeBulletDamage:

	ldr r0, =ship
	ldrsh r1, [r0, #SHIP_FIELD_BULLETDAMAGE]
	add r1, r1, #1
	strh r1, [r0, #SHIP_FIELD_BULLETDAMAGE]

	b maybeCollideShipItem_done
maybeCollideShipItem_caseUpgradeFireRate:

	ldr r0, =ship
	ldrsb r1, [r0, #SHIP_FIELD_FIRERATE]
	add r1, r1, #1
	strb r1, [r0, #SHIP_FIELD_FIRERATE]

	b maybeCollideShipItem_done
maybeCollideShipItem_caseUpgradeMaxSpeed:

	ldr r0, =ship
	ldrsh r1, [r0, #SHIP_FIELD_MAXSPEED]
	add r1, r1, #2
	strh r1, [r0, #SHIP_FIELD_MAXSPEED]

maybeCollideShipItem_done:
	pop {r4-r5, pc}
maybeCollideShipItem_jumpTable:
	.word maybeCollideShipItem_caseMineral
	.word maybeCollideShipItem_caseHealthKit
	.word maybeCollideShipItem_caseInvulnerability
	.word maybeCollideShipItem_caseUpgradeMaxHealth
	.word maybeCollideShipItem_caseUpgradeBulletSpeed
	.word maybeCollideShipItem_caseUpgradeBulletDamage
	.word maybeCollideShipItem_caseUpgradeFireRate
	.word maybeCollideShipItem_caseUpgradeMaxSpeed
// end maybeCollideShipItem

/*
fn maybeCollideShipAsteroid(asteroid: &mut Asteroid) {
	if ship.lifetime == 0 {
		return;
	}

	let distanceSquare = square(ship.xPos - asteroid.xPos) + square(ship.yPos - asteroid.yPos);
	if distanceSquare <= square(1 << asteroid.size) + square(SHIP_RADIUS) {
		ship.health -= asteroid.health;
		asteroid.lifetime = 0;
		if ship.health <= 0 {
			killShip();
		}
	}
}
*/
maybeCollideShipAsteroid:
	push {r4-r5, lr}

	// r0 = asteroid

	// r1 = ship
	ldr r1, =ship

	ldr r2, [r1, #ENTITY_FIELD_LIFETIME]
	cmp r2, #0
	beq maybeCollideShipAsteroid_earlyReturn

	// r2 = square(ship.xPos - asteroid.xPos)
	ldr r2, [r1, #ENTITY_FIELD_XPOS]
	ldr r3, [r0, #ENTITY_FIELD_XPOS]
	sub r3, r2, r3
	mul r2, r3, r3

	// r3 = square(ship.yPos - asteroid.yPos)
	ldr r3, [r1, #ENTITY_FIELD_YPOS]
	ldr r4, [r0, #ENTITY_FIELD_YPOS]
	sub r4, r3, r4
	mul r3, r4, r4

	// r2 = distanceSquare
	add r2, r2, r3

	// skip if out of range
	ldrsb r4, [r0, #ASTEROID_FIELD_SIZE]
	mov r3, #1
	lsl r4, r3, r4
	mul r3, r4, r4
	mov r4, #SHIP_RADIUS
	mla r3, r4, r4, r3
	cmp r2, r3
	bgt maybeCollideShipAsteroid_earlyReturn

	// there must be a collision

	// asteroid.lifetime = 0;
	mov r2, #0
	str r2, [r0, #ENTITY_FIELD_LIFETIME]

	// ship.health -= asteroid.health; r2 = ??? r3 = ???
	ldrsh r2, [r1, #SHIP_FIELD_HEALTH]
	ldrsh r3, [r0, #ASTEROID_FIELD_HEALTH]
	subs r2, r2, r3
	strh r2, [r1, #SHIP_FIELD_HEALTH]
	bllt killShip

maybeCollideShipAsteroid_earlyReturn:
	pop {r4-r5, pc}
// end maybeCollideShipAsteroid

/*
checkIfWithinDistance(a: &mut Entity, b: &mut Entity, distance: i16) {
	square(b.xPos - a.xPos) + square(b.yPos - a.yPos) <= square(distance)
}
*/
checkIfWithinDistance:
	push {r4}

	// r3 = square(b.xPos - a.xPos)
	ldr r3, [r1, #ENTITY_FIELD_XPOS]
	ldr r4, [r0, #ENTITY_FIELD_XPOS]
	sub r4, r3, r4
	mul r3, r4, r4

	// r1 = square(b.xPos - a.xPos) + square(b.yPos - a.yPos)
	ldr r1, [r1, #ENTITY_FIELD_YPOS]
	ldr r0, [r0, #ENTITY_FIELD_YPOS]
	sub r0, r1, r0
	mla r1, r0, r0, r3

	mov r0, #0
	mul r3, r2, r2
	cmp r1, r3
	movle r0, #1

	pop {r4}
	bx lr
// end checkIfWithinDistance

/*
fn killShip() {
	ship.lifetime = 0;
	gameState = GameState::DeathScreen;
}
*/
killShip:
	ldr r0, =ship
	mov r1, #0
	str r1, [r0, #ENTITY_FIELD_LIFETIME]

	ldr r0, =gameState
	mov r1, #GAMESTATE_VARIANT_DEATHSCREEN
	strb r1, [r0]

	bx lr
// end killShip

/*
trimCsb: updates the begin index to reflect the index of the first non-dead element (or the end
iterator, if there are no non-dead elements)

fn trimCsb(buff: &mut Csb<T>){
	while buff.begin != buff.end && isDead(buff[buff.begin]) {
		buff.begin += 1; // using circular increments
	}
}
*/
trimCsb:
	push {r4-r5}

	// r0 = buff

	// r0 = buff.data, r1 = buff.elementSize, r2 = buff.begin, r3 = buff.end, r4 = buff.capacity
	ldr r1, [r0, #CSB_FIELD_ELEMENTSIZE]
	ldr r2, [r0, #CSB_FIELD_BEGIN]
	ldr r3, [r0, #CSB_FIELD_END]
	ldr r4, [r0, #CSB_FIELD_CAPACITY]
	add r0, r0, #CSB_FIELD_DATA

	b trimCsb_cond
trimCsb_body:
	add r2, r2, #1
	cmp r2, r4
	movge r2, #0
trimCsb_cond:
	cmp r2, r3
	beq trimCsb_done
	// r5 = first halfword of buff.data[buff.begin]
	mla r5, r2, r1, r0
	ldrh r5, [r5]
	cmp r5, #0
	beq trimCsb_body
trimCsb_done:

	// restore buff.begin to memory
	str r2, [r0, #(CSB_FIELD_BEGIN - CSB_FIELD_DATA)]

	pop {r4-r5}
	bx lr
// end trimCsb

/*
forEach: takes a Csb and applies the specified procedure to all elements that aren't dead.
Also passes arg1 and arg2 to the procedure, if the procedure accepts them.

fn forEach(buff: &mut Csb<T>, procedure: fn (&mut T, Arg1, Arg2) -> void, arg1: Arg1, arg2: Arg2) {
	for i in buff.begin..buff.end { // using circular increments
		if !isDead(buff[i]) {
			procedure(buff[i]);
		}
	}
}
*/
forEach:
	push {r4-r11, lr}

	// r0 = buff
	// r1 = procedure

	// r9 = procedure, r10 = arg1, r11 = arg2
	mov r9, r1
	mov r10, r2
	mov r11, r3

	// r4 = &buff.data, r5 = buff.elementSize, r6 = buff.begin, r7, = buff.end, r8 = buff.capacity
	ldr r5, [r0, #CSB_FIELD_ELEMENTSIZE]
	ldr r6, [r0, #CSB_FIELD_BEGIN]
	ldr r7, [r0, #CSB_FIELD_END]
	ldr r8, [r0, #CSB_FIELD_CAPACITY]
	add r4, r0, #CSB_FIELD_DATA

	// r6 = i
	b forEach_cond
forEach_body:

	mla r0, r6, r5, r4 // r0 = &buff[i]
	ldrh r1, [r0] // r1 = first halfword of buff[i]
	cmp r1, #0
	beq forEach_skipElement
	mov r1, r10
	mov r2, r11
	blx r9
forEach_skipElement:

	add r6, r6, #1
	cmp r6, r8
	movge r6, #0
forEach_cond:
	cmp r6, r7
	bne forEach_body

	pop {r4-r11, pc}
// end forEach

/*
forEachPair: takes two Csbs and applies the specified procedure to all pairs of non-dead elements.
buffA is the outer iteration; buffB is the inner iteration. Notice that A and B are switched in
the procedure.

fn forEachPair(buffA: &mut Csb<A>, buffB: &mut Csb<B>, procedure: fn (&mut B, &mut A) -> void) {
	fn forEachPair_helper(a: &mut A, procedure: fn (&mut B, &mut A) -> void, buffB: &mut Csb<B>) {
		forEach(buffB, procedure, a);
	}
	forEach(buffA, forEachPair_helper, procedure, buffB);
}
*/
forEachPair_helper:
	push {lr}

	// r0 = a, r1 = procedure, r2 = buffB

	// forEach(buffB, procedure, a);
	mov r3, r0
	mov r0, r2
	mov r2, r3
	bl forEach

	pop {pc}
// end forEachPair_helper
forEachPair:
	push {lr}

	// r0 = buffA, r1 = buffB, r2 = procedure

	// forEach(buffA, forEachPair_helper, procedure, buffB);
	mov r3, r1
	ldr r1, =forEachPair_helper
	bl forEach

	pop {pc}
// end forEachPair

/*
addSpace: allocates an additional space in the specified Csb and returns a pointer to the space.
The pointer points to uninitialized memory.
WARNING: assumes that there is enough space in the buffer to do this.

fn addSpace(buff: &mut Csb<T>) -> &mut T {
	let oldEnd = buff.end;
	buff.end += 1; // circular increment
	return &buff.data[oldEnd];
}
*/
addSpace:
	// r0 = buff.elementSize, r1 = &buff.data, r2 = oldEnd, r3 = buff.capacity,
	ldr r2, [r0, #CSB_FIELD_END]
	ldr r3, [r0, #CSB_FIELD_CAPACITY]
	add r1, r0, #CSB_FIELD_DATA
	ldr r0, [r1, #(CSB_FIELD_ELEMENTSIZE - CSB_FIELD_DATA)]

	// r0 = buff.data[oldEnd]
	mla r0, r2, r0, r1

	// r2 = buff.end
	add r2, r2, #1
	cmp r2, r3
	movge r2, #0
	str r2, [r1, #(CSB_FIELD_END - CSB_FIELD_DATA)]

	bx lr
// end addSpace

/*
fn spawnBullet(ship: &Ship) {
	let bullet: &mut Bullet = addSpace(bulletBuff);
	bullet.lifetime = 30;
	bullet.xPos = ship.xPos;
	bullet.yPos = ship.yPos;
	bullet.xVel = ship.direction * ship.bulletSpeed;
	bullet.yVel = -ship.bulletSpeed;
	bullet.costume = bulletSkinArray[ship.direction + 1];
	bullet.damage = ship.bulletDamage;
	bullet.radius = ship.bulletSpeed;
}
*/
spawnBullet:
	push {r4-r8, lr}
	// r0 = ship

	// r4 = ship.xPos, r5 = ship.yPos, r6 = ship.direction, r7 = ship.bulletDamage, r8 = ship.bulletSpeed
	ldr r4, [r0, #ENTITY_FIELD_XPOS]
	ldr r5, [r0, #ENTITY_FIELD_YPOS]
	ldrsb r6, [r0, #SHIP_FIELD_DIRECTION]
	ldrsh r7, [r0, #SHIP_FIELD_BULLETDAMAGE]
	ldrsh r8, [r0, #SHIP_FIELD_BULLETSPEED]

	// r0 = bullet
	ldr r0, =bulletBuff
	bl addSpace

	mov r1, #30
	str r1, [r0, #ENTITY_FIELD_LIFETIME]

	str r4, [r0, #ENTITY_FIELD_XPOS]

	str r5, [r0, #ENTITY_FIELD_YPOS]

	mul r1, r6, r8
	strh r1, [r0, #ENTITY_FIELD_XVEL]

	rsb r1, r8, #0
	strh r1, [r0, #ENTITY_FIELD_YVEL]

	strh r7, [r0, #BULLET_FIELD_DAMAGE]

	strh r8, [r0, #BULLET_FIELD_RADIUS]

	ldr r1, =bulletSkinArray
	add r2, r6, #1
	ldr r1, [r1, r2, lsl #2]
	str r1, [r0, #COSTUMEDENTITY_FIELD_COSTUME]

	pop {r4-r8, pc}
// end spawnBullet

/*
fn spawnAsteroid() {
	let asteroid: &mut Asteroid = addSpace(asteroidBuff);
	asteroid.lifetime = 60;
	asteroid.xPos = 200 * 8;
	asteroid.yPos = -10 * 8;
	asteroid.xVel = -2 * 8;
	asteroid.yVel = 4 * 8;
	asteroid.costume = shipSkinForward;
	asteroid.size = 8;
	asteroid.originalHealth = 25;
	asteroid.health = asteroid.originalHealth;
	asteroid.isSpecial = true;
}
*/
spawnAsteroid:
	push {r4-r5, lr}

	// r4 = asteroid
	ldr r0, =asteroidBuff
	bl addSpace
	mov r4, r0

	mov r5, #60
	str r5, [r4, #ENTITY_FIELD_LIFETIME]

	mov r5, #(200 * 8)
	str r5, [r4, #ENTITY_FIELD_XPOS]

	mov r5, #(-10 * 8)
	str r5, [r4, #ENTITY_FIELD_YPOS]

	mov r5, #(-2 * 8)
	strh r5, [r4, #ENTITY_FIELD_XVEL]

	mov r5, #(4 * 8)
	strh r5, [r4, #ENTITY_FIELD_YVEL]

	ldr r5, =asteroidSkin
	str r5, [r4, #COSTUMEDENTITY_FIELD_COSTUME]

	mov r5, #8
	strb r5, [r4, #ASTEROID_FIELD_SIZE]

	mov r5, #25
	strh r5, [r4, #ASTEROID_FIELD_ORIGINALHEALTH]
	strh r5, [r4, #ASTEROID_FIELD_HEALTH]

	mov r5, #1
	strb r5, [r4, #ASTEROID_FIELD_ISSPECIAL]

	pop {r4-r5, pc}
// end spawnAsteroid

/*
fn spawnItem(x: i32, y: i32, isSpecial: bool) {
	let item: &mut Item = addSpace(itemBuff);
	item.lifetime = 100;
	item.xPos = x;
	item.yPos = y;
	item.xVel = 0;
	item.yVel = 0;
	item.itemType = if isSpecial {
		rand() >> 29 as ItemType
	} else {
		ItemType::Mineral
	};
	item.costume = itemSkinArray[item.itemType];
}
*/
spawnItem:
	push {r4-r7, lr}

	// r5 = x, r6 = y, r7 = isSpecial
	mov r5, r0
	mov r6, r1
	mov r7, r2

	// r4 = item
	ldr r0, =itemBuff
	bl addSpace
	mov r4, r0

	mov r0, #100
	str r0, [r4, #ENTITY_FIELD_LIFETIME]

	str r5, [r4, #ENTITY_FIELD_XPOS]
	str r6, [r4, #ENTITY_FIELD_YPOS]

	mov r0, #0
	strh r0, [r4, #ENTITY_FIELD_XVEL]
	strh r0, [r4, #ENTITY_FIELD_YVEL]

	// r7 = item.itemType
	cmp r7, #0
	beq spawnItem_notSpecial
	bl rand
	lsr r7, r0, #29
spawnItem_notSpecial:
	strb r7, [r4, #ITEM_FIELD_ITEMTYPE]

	ldr r0, =itemSkinArray
	ldr r0, [r0, r7, lsl #2]
	str r0, [r4, #COSTUMEDENTITY_FIELD_COSTUME]

	pop {r4-r7, pc}
// end spawnItem

/*
updateKeyboardState: updates the keyboardState struct to reflect the current state of the keyboard.
Cannot handle pause key.

fn updateKeyboardState() {
	let static mut extended = false;
	let static mut make = true; // assume it's a make scan code unless a break code is encountered
	for keyState in keyboardState {
		keyState.changed = false;
	}
	while REG_PS2_FIFO.bufferSize > 0 {
		let scanCode = REG_PS2_FIFO.nextScanCode();
		match scanCode {
			0xf0 => make = false,
			0xe0 => extended = true,
			scanCode => {
				let keyIndex = if extended { scanCode } else { scanCode + 256 };
				keyboardState[keyIndex].changed = keyboardState[keyIndex].pressed != make;
				keyboardState[keyIndex].pressed = make;
				make = true;
				extended = false;
			},
		}
	}
}
*/
updateKeyboardState:
	push {r4-r6}

	// r1 = keyboardState
	ldr r1, =keyboardState

	// r5 = make, r6 = extended
	ldrb r5, [r1, #KEYBOARDSTATE_OFFSETFOR_MAKE]
	ldrb r6, [r1, #KEYBOARDSTATE_OFFSETFOR_EXTENDED]

	// iterate over keyState
	mov r2, #KEYBOARDSTATE_SIZE
	b updateKeyboardState_clearChangedCond
updateKeyboardState_clearChangedBody:

	// keyboardState[r2].changed = false;
	ldrb r0, [r1, r2]
	bic r0, r0, #(1 << KEYSTATE_BITINDEXOF_CHANGED)
	strb r0, [r1, r2]

updateKeyboardState_clearChangedCond:
	subs r2, r2, #1
	bge updateKeyboardState_clearChangedBody

	// r2 = REG_PS2_FIFO
	ldr r2, =REG_PS2_FIFO

	b updateKeyboardState_processCodesCond
updateKeyboardState_processCodesBody:

	// r3 = scanCode
	ldrb r3, [r2, #FIFO_FIELD_NEXT]

	// match statement
	cmp r3, #0xf0
	beq updateKeyboardState_codeBreak
	cmp r3, #0xe0
	beq updateKeyboardState_codeExtended

	// r3 = keyIndex
	cmp r6, #1
	addeq r3, r3, #0x100

	// r4 = keyboardState[keyIndex]
	ldrb r4, [r1, r3]
	add r4, r4, r5
	add r4, r5, r4, lsl #1
	and r4, r4, #((1 << KEYSTATE_BITINDEXOF_CHANGED) + (1 << KEYSTATE_BITINDEXOF_PRESSED)) // discard useless bits
	strb r4, [r1, r3]

	// reset flags
	mov r5, #1
	mov r6, #0

	b updateKeyboardState_processCodesCond
updateKeyboardState_codeBreak:

	// make = false
	mov r5, #0

	b updateKeyboardState_processCodesCond
updateKeyboardState_codeExtended:

	// extended = true
	mov r6, #1

updateKeyboardState_processCodesCond:
	// r3 = bufferSize
	ldrb r3, [r2, #FIFO_FIELD_BUFFERSIZE]
	cmp r3, #0
	bne updateKeyboardState_processCodesBody

	// restore make and extended to memory
	strb r5, [r1, #KEYBOARDSTATE_OFFSETFOR_MAKE]
	strb r6, [r1, #KEYBOARDSTATE_OFFSETFOR_EXTENDED]

	pop {r4-r6}
	bx lr
// end updateKeyboardState

/*
fn renderFrame(buffer: &PixBuffer) {
	clearVga();

	forEach(bulletBuff, renderCostumedEntity, buffer);
	forEach(asteroidBuff, renderCostumedEntity, buffer);
	forEach(itemBuff, renderCostumedEntity, buffer);

	// draw player
	if ship.lifetime != 0 {
		bitBlit(buffer, (*shipSkinArray)[ship.direction + 1], ship.xPos, ship.yPos);
	}

	clearTextBuffer();
	drawNum(0, 0, tick);
	match gameState {
		GameState::DeathScreen => drawStr(34, 50, "You died! :("),
		GameState::StartScreen => drawStr(34, 50, "Press SPACE!"),
		GameState::Paused =>      drawStr(34, 50, "Game Paused"),
		_ => (),
	}
	// TODO show stats
	drawStr(1, 50, "HP");
	drawNum(4, 50, ship.health);
	drawStr(1, 51, "FC")
	drawStr
	drawStr(1, 52, "$$")
	drawStr(1, 53, "MH")
	drawStr(1, 54, "BS")
	drawStr(1, 55, "BD")
	drawstr(1, 56, "FR")
	drawStr(1, 57, "MS")
}
*/
renderFrame:
	push {r4-r7, lr}
	// r0 = buffer

	// r4 = buffer
	mov r4, r0

	// clearVga();
	// r0 is already the buffer address
	ldr r1, =0x0
	bl clearVga

	// forEach(asteroidBuff, renderCostumedEntity, buffer);
	ldr r0, =asteroidBuff
	ldr r1, =renderCostumedEntity
	mov r2, r4
	bl forEach

	// forEach(bulletBuff, renderCostumedEntity, buffer);
	ldr r0, =bulletBuff
	ldr r1, =renderCostumedEntity
	mov r2, r4
	bl forEach

	// forEach(itemBuff, renderCostumedEntity, buffer);
	ldr r0, =itemBuff
	ldr r1, =renderCostumedEntity
	mov r2, r4
	bl forEach

	// draw Player
	ldr r3, =ship
	ldr r2, [r3, #ENTITY_FIELD_LIFETIME]
	cmp r2, #0
	beq renderFrame_skipDrawPlayer
	mov r0, r4
	ldrsb r2, [r3, #SHIP_FIELD_DIRECTION]
	add r2, r2, #1
	ldr r1, =shipSkinArray
	ldr r1, [r1, r2, lsl #2]
	ldr r2, [r3, #ENTITY_FIELD_XPOS]
	ldr r3, [r3, #ENTITY_FIELD_YPOS]
	bl bitBlit
renderFrame_skipDrawPlayer:

	bl clearTextBuffer

	// drawNum(0, 0, tick)
	mov r0, #0
	mov r1, #0
	ldr r2, =tick
	ldr r2, [r2]
	bl drawNum

	// print game state
	ldr r0, =gameState
	ldrb r0, [r0]
	cmp r0, #GAMESTATE_VARIANT_DEATHSCREEN
	beq renderFrame_deathScreen
	cmp r0, #GAMESTATE_VARIANT_STARTSCREEN
	beq renderFrame_startScreen
	cmp r0, #GAMESTATE_VARIANT_PAUSED
	beq renderFrame_paused
	b renderFrame_gameStateDone
renderFrame_deathScreen:

	mov r0, #34
	mov r1, #50
	ldr r2, =deathMessage
	bl drawStr

	b renderFrame_gameStateDone
renderFrame_startScreen:

	mov r0, #34
	mov r1, #50
	ldr r2, =startMessage
	bl drawStr

	b renderFrame_gameStateDone
renderFrame_paused:

	mov r0, #34
	mov r1, #50
	ldr r2, =pausedMessage
	bl drawStr

renderFrame_gameStateDone:

	// r4 = ship
	ldr r4, =ship

	mov r0, #1
	mov r1, #50
	ldr r2, =renderFrame_stringHP
	bl drawStr

	mov r0, #4
	mov r1, #50
	ldrsh r2, [r4, #SHIP_FIELD_HEALTH]
	bl drawNum

	mov r0, #1
	mov r1, #51
	ldr r2, =renderFrame_stringMH
	bl drawStr

	mov r0, #4
	mov r1, #51
	ldrsh r2, [r4, #SHIP_FIELD_MAXHEALTH]
	bl drawNum

	mov r0, #1
	mov r1, #52
	ldr r2, =renderFrame_stringBS
	bl drawStr

	mov r0, #4
	mov r1, #52
	ldrsh r2, [r4, #SHIP_FIELD_BULLETSPEED]
	bl drawNum

	mov r0, #1
	mov r1, #53
	ldr r2, =renderFrame_stringBD
	bl drawStr

	mov r0, #4
	mov r1, #53
	ldrsh r2, [r4, #SHIP_FIELD_BULLETDAMAGE]
	bl drawNum

	mov r0, #1
	mov r1, #54
	ldr r2, =renderFrame_stringFC
	bl drawStr

	mov r0, #4
	mov r1, #54
	ldrsb r2, [r4, #SHIP_FIELD_CURRENTFIRECOOLDOWN]
	bl drawNum

	mov r0, #1
	mov r1, #55
	ldr r2, =renderFrame_stringFR
	bl drawStr

	mov r0, #4
	mov r1, #55
	ldrsb r2, [r4, #SHIP_FIELD_FIRERATE]
	bl drawNum

	mov r0, #1
	mov r1, #56
	ldr r2, =renderFrame_stringMS
	bl drawStr

	mov r0, #4
	mov r1, #56
	ldrsh r2, [r4, #SHIP_FIELD_MAXSPEED]
	bl drawNum

	mov r0, #1
	mov r1, #57
	ldr r2, =renderFrame_stringBK
	bl drawStr

	mov r0, #4
	mov r1, #57
	ldr r2, =mineralBank
	ldr r2, [r2]
	bl drawNum

	pop {r4-r7, pc}

renderFrame_stringHP:
	.asciz "HP"
renderFrame_stringMH:
	.asciz "MH"
renderFrame_stringBS:
	.asciz "BS"
renderFrame_stringBD:
	.asciz "BD"
renderFrame_stringFC:
	.asciz "FC"
renderFrame_stringFR:
	.asciz "FR"
renderFrame_stringMS:
	.asciz "MS"
renderFrame_stringBK:
	.asciz "BK"
deathMessage:
	.asciz "You died! :("
startMessage:
	.asciz "Press SPACE!"
pausedMessage:
	.asciz "Game paused"
.align 2
// end renderFrame

/*
fn renderCostumedEntity(entity: &CostumedEntity, buffer: &PixBuffer) {
	bitBlit(buffer, entity.costume, entity.xPos, entity.yPos)
}
*/
renderCostumedEntity:
	push {lr}

	mov r3, r0
	mov r0, r1
	ldr r1, [r3, #COSTUMEDENTITY_FIELD_COSTUME]
	ldr r2, [r3, #ENTITY_FIELD_XPOS]
	ldr r3, [r3, #ENTITY_FIELD_YPOS]
	bl bitBlit

	pop {pc}
// end renderCostumedEntity

/*
fn setUpDoubleBuffer();
*/
setUpDoubleBuffer:
	push {r4, lr}

	ldr r4, =REG_PIX_BACKBUFFER

	// put the buffer address into the backbuffer register
	ldr r0, =bufferA
	str r0, [r4]

	bl swapBuffers
	bl waitVsync

	// put the other buffer address into the backbuffer register
	ldr r0, =bufferB
	str r0, [r4]

	pop {r4, pc}
// end setUpDoubleBuffer

/*
swapBuffers: requests a buffer swap by writing 1 to the frontbuffer register
*/
swapBuffers:
	mov r0, #1
	ldr r1, =REG_PIX_FRONTBUFFER
	str r0, [r1]
	bx lr
// end swapBuffers

/*
waitVsync: blocks until vsync is finished
*/
waitVsync:
	ldr r0, =REG_PIX_STATUS
	ldr r0, [r0]
	and r0, r0, #(1 << PIXSTATUS_BITINDEXOF_ISSWAPPING)
	cmp r0, #0
	bne waitVsync
	bx lr
// end waitVsync

/*
clearVga: fills the video buffer with the specified color

fn clearVga(buffer: *PixBuffer, color: u16) {
	let color_pair: u32 = (color << 16) | color;
	for row in 0..240 {
		let buffer_row = buffer[row] as *u32; // expand size to write to 4-byte color pairs rather than 2-byte colors
		for col in 0..(320 / 2) { // col doesn't count pixels, but rather pixel pairs
			buffer[col] = colorpair;
		}
	}
}
*/
clearVga:
	// r1 = color
	// r0 = buffer_row (see outer loop's iteration expression)

	// r1 = colorpair
	orr r1, r1, r1, lsl #16

	// r2 = row
	mov r2, #0
	b clearVga_outerForCond
clearVga_outerForBody:

	// r3 = col
	mov r3, #0
	b clearVga_innerForCond
clearVga_innerForBody:

	str r1, [r0, r3, lsl #2] // storing into a u32 array

	add r3, r3, #1
clearVga_innerForCond:
	cmp r3, #(PIX_WIDTH / 2)
	blo clearVga_innerForBody

	add r2, r2, #1
	add r0, r0, #(1 << PIXBUFFER_ROWSHIFT) // update pointer to new row
clearVga_outerForCond:
	cmp r2, #PIX_HEIGHT
	blo clearVga_outerForBody

	bx lr
// end clearVga

/*
clearTextBuffer: Fills the text buffer with spaces (ASCII 32)

fn clearTextBuffer() {
	for row in 0..60 {
		let buffer_row = TEXT_BUFFER[row];
		for col in (0..80).step(4) {
			// expand size to write 4-byte strings rather than single byte characters
			*(buffer_row[col] as *u32) = 0x20202020;
		}
	}
}
*/
clearTextBuffer:
	// r0 = buffer_row (see outer loop's iteration expression)
	mov r0, #TEXT_BUFFER

	// r1 = 0x20202020
	ldr r1, =0x20202020

	// r2 = row
	mov r2, #0
	b clearTextBuffer_outerForCond
clearTextBuffer_outerForBody:

	// r3 = col
	mov r3, #0
	b clearTextBuffer_innerForCond
clearTextBuffer_innerForBody:

	str r1, [r0, r3]

	add r3, r3, #4
clearTextBuffer_innerForCond:
	cmp r3, #TEXT_WIDTH
	blo clearTextBuffer_innerForBody

	add r2, r2, #1
	add r0, r0, #(1 << TEXTBUFFER_ROWSHIFT) // update pointer to new row
clearTextBuffer_outerForCond:
	cmp r2, #TEXT_HEIGHT
	blo clearTextBuffer_outerForBody

	bx lr
// end clearTextBuffer

/*
bitBlit: Draws the specified Pixmap into the VGA buffer, centered at the specified x and y
coordinates. If the image goes past the VGA screen boundaries, pixels are not drawn.

fn bitBlit(buffer: *PixBuffer, p: *Pixmap, x: i32, y: i32) {
	// convert center coordinates to top left corner coordinates
	let y = y >> 3 - p.anchorY;
	let x = x >> 3 - p.anchorX;

	// find the portion of the pixmap to draw
	let start_row = max(0, -y);
	let start_col = max(0, -x);
	let end_row = min(p.height, PIX_HEIGHT - y);
	let end_col = min(p.width, PIX_WIDTH - x);

	for row in start_row..end_row {
		let buffer_row: *u16 = (buffer[y + row] + x) as *u16;
		for col in start_col..end_col {
			let pixel = p.pixeldata[row * p.width + col];
			if pixel != p.transparency {
				buffer[col] = pixel;
			}
		}
	}
}
*/
bitBlit:
	push {r4-r9, lr}

	// r0 = buffer
	// r1 = p
	// r2 = x
	// r3 = y

	// r2 = x, r3 = y
	ldrh r4, [r1, #PIXMAP_FIELD_ANCHORX]
	rsb r2, r4, r2, asr #3
	ldrh r4, [r1, #PIXMAP_FIELD_ANCHERY]
	rsb r3, r4, r3, asr #3

	// r6 = start_col
	rsbs r6, r2, #0
	movle r6, #0

	// r7 = start_row
	rsbs r7, r3, #0
	movle r7, #0

	// r4 = p.width
	ldrh r4, [r1, #PIXMAP_FIELD_WIDTH]

	// r5 = p.height
	ldrh r5, [r1, #PIXMAP_FIELD_HEIGHT]

	// r8 = end_col
	rsb r8, r2, #PIX_WIDTH
	cmp r8, r4
	movge r8, r4

	// r9 = end_row
	rsb r9, r3, #PIX_HEIGHT
	cmp r9, r5
	movge r9, r5

	// From here on, horizontal coordinates are double what they are in the pseudocode, for ease of
	// fetching the halfword values.
	lsl r2, r2, #1
	lsl r4, r4, #1
	lsl r8, r8, #1
	// skip doubling r6 because it gets reset anyway

	// r0 = PIX_BUFFER[y + start_row] + x
	add r0, r0, r3, lsl #PIXBUFFER_ROWSHIFT
	add r0, r0, r7, lsl #PIXBUFFER_ROWSHIFT
	add r0, r0, r2

	// r3 = p.transparency
	ldrh r3, [r1, #PIXMAP_FIELD_TRANSPARENCY]

	// r1 = p.pixeldata
	add r1, #PIXMAP_FIELD_PIXELDATA

	// r2 = start_col
	lsl r2, r6, #1

	// r7 = row
	// r6 = col

	// outer for loop
	b bitBlit_outerCond
bitBlit_outerBody:

	// r0 = buffer_row (see loop's iteration expression)

	// inner for loop
	mov r6, r2
	b bitBlit_innerCond
bitBlit_innerBody:

	// r5 = pixel
	mla r5, r7, r4, r6
	ldrh r5, [r1, r5]

	// maybe draw pixel
	cmp r5, r3
	beq bitBlit_skipDraw
	strh r5, [r0, r6]
bitBlit_skipDraw:

	add r6, r6, #2
bitBlit_innerCond:
	cmp r6, r8
	blt bitBlit_innerBody

	add r0, r0, #(1 << PIXBUFFER_ROWSHIFT) // update pointer to new row
	add r7, r7, #1
bitBlit_outerCond:
	cmp r7, r9
	blt bitBlit_outerBody

	pop {r4-r9, pc}
// end bitBlit

/*
drawStr: draws a null-terminated string into the character buffer

fn drawStr(x: uint, y: uint, str: *char) {
	let bufferRow: [u8; TEXT_WIDTH] = TEXT_BUFFER[y];
	let mut col = x;
	let mut p = str;
	while x < TEXT_WIDTH && *p != '\0' {
		bufferRow[col] = *p;
		col += 1;
		p += 1;
	}
}
*/
drawStr:
	// r0 = x
	// r1 = y
	// r2 = str

	// r1 = bufferRow
	lsl r1, r1, #7
	add r1, r1, #TEXT_BUFFER

	// r0 = col
	// r3 = *p
	b drawStr_cond
drawStr_loop:

	strb r3, [r1, r0]
	add r0, r0, #1
	add r2, r2, #1

drawStr_cond:
	cmp r0, #TEXT_WIDTH
	bhs drawStr_end
	ldrb r3, [r2]
	cmp r3, #0
	bne drawStr_loop

drawStr_end:
	bx lr
// end drawStr

/*
drawNum: draws a signed integer into the character buffer

fn drawNum(x: uint, y: uint, num: i32) {
	let mut remainingDigits = num;
	let mut buffer: [u8; 12]; // max int is 10 decimal digits, plus two for null terminator and minus
	let mut = 11; // index to the first element of the array
	buffer[index] = '\0';

	// add digits to buffer
	if num == 0 {
		index -= 1;
		buffer[index] = '0';
	} else {
		// handle negative
		if num < 0 {
			remainingDigits = -remainingDigits;
		}

		// extract digits
		let mut rem;
		// write to the array from right to left
		while remainingDigits > 0 {
			(remainingDigits, rem) = divTenRem(remainingDigits);
			index -= 1;
			buffer[index] = toAscii(rem);
		}

		if num < 0 {
			index -= 1;
			buffer[index] = '-';
		}
	}

	// print buffer
	drawStr(x, y, (buffer as *u8) + index);
}
*/
drawNum:
	push {r4-r7, lr}

	// sp = buffer
	sub sp, sp, #12

	// r4 = x, r5 = y, r6 = num, r7 = index
	mov r4, r0
	mov r5, r1
	mov r6, r2
	mov r7, #11

	// buffer[index] = '\0';
	mov r0, #0
	strb r0, [sp, r7]

	// r0 = num, r0 = remainingDigits
	movs r0, r2

	// handle zero
	beq drawNum_isZero

	// handle negative possibility
	rsblt r0, r0, #0

	// extract digits
	b drawNum_cond
drawNum_loop:

	// r0 = remainingDigits, r1 = rem
	bl divTenRem
	sub r7, r7, #1
	add r1, r1, #48 // r1 = toAscii(rem)
	strb r1, [sp, r7]

drawNum_cond:
	cmp r0, #0
	bhi drawNum_loop

	// maybe add minus sign
	cmp r6, #0
	bge drawNum_skipMinusSign
	sub r7, r7, #1
	mov r1, #45 // r1: '-'
	strb r1, [sp, r7]
drawNum_skipMinusSign:

	b drawNum_print
drawNum_isZero:
	sub r7, r7, #1
	mov r1, #48 // r1 = '0'
	strb r1, [sp, r7]

drawNum_print:
	mov r0, r4
	mov r1, r5
	add r2, sp, r7
	bl drawStr

	add sp, sp, #12 // deallocate array of 12 bytes
	pop {r4-r7, pc}
// end drawNum

/*
divTenRemSmall: divides an unsigned number by 10, returning its quotient and remainder. Will not
work for numbers larger than about 6.7e8.
Algorithm for dividing by 10 credited to:
Vowels, R. A. (1992). "Division by 10". Australian Computer Journal. 24 (3): 81–85.

fn divTenRemSmall(dividend: i32) -> (quotient: i32, remainder: i32);
*/
divTenRemSmall:
	mov r1, r0 // save the divident for later

	// divide r0 by 10
	add r0, r0, #1
	lsl r0, r0, #1
	add r0, r0, r0, lsl #1
	add r0, r0, r0, lsr #4
	add r0, r0, r0, lsr #8
	add r0, r0, r0, lsr #16
	lsr r0, r0, #6

	// subtract quotient * 10 from the dividend to get remainder
	sub r1, r1, r0, lsl #3 // divident - 8 * quotient
	sub r1, r1, r0, lsl #1 // divident - 8 * quotient - 2 * quotient

	bx lr
// end divTenRemSmall

/*
divTenRem: divides an unsigned number by 10, returning its quotient and remainder. Will work for any
unsigned 32-bit number, unlike divTenRemSmall.

fn divTenRem(dividend: i32) -> (quotient: i32, remainder: i32){
	if (dividend <= 0x10000000) { // 28 bits is safely below the maximum valid input for divTenRemSmall
		return divTenRemSmall(dividend);
	}
	int msn = dividend & 0xf0000000; // "most significant nybble"
	int rest = dividend - msn;
	msn >>= 4;
	(int msnQuot, int msnRem) = divTenRemSmall(msn);
	msnQuot <<= 4;
	rest += msnRem << 4;
	(int restQuot, int restRem) = divTenRemSmall(rest);
	return (msnQuot + restQuot, restRem);
}
*/
divTenRem:
	// r0: dividend
	cmp r0, #0x10000000
	bhi divTenRem_continue
	push {lr}
	bl divTenRemSmall
	pop {pc}

	divTenRem_continue:
	push {r4, r5, lr}
	and r4, r0, #0xf0000000 // r4: msn
	sub r5, r0, r4 // r5: rest
	lsr r0, r4, #4 // r0: msn
	bl divTenRemSmall // r0: msnQuot, r1: msnRem
	lsl r4, r0, #4 // r4: msnQuot
	add r0, r5, r1, lsl $4 // r0: rest
	bl divTenRemSmall // r0: restQuot, r1: restRem
	add r0, r0, r4 // r0: msnQuot + restQuot
	pop {r4, r5, pc}
// end divTenRem

/*
rand: generates a pseudo-random number using a linear congruential generator.
https://en.wikipedia.org/wiki/Linear_congruential_generator

fn rand() -> u32 {
	let static mut seed = 0xcafebabe;
	seed = seed * 134775813 + 1; // allow wraparound overflowing
	return seed;
*/
rand_seed:
	.word 0xcafebabe
rand_multiplier:
	.word 134775813
rand:
	ldr r0, rand_seed
	ldr r1, rand_multiplier
	mul r0, r0, r1
	add r0, r0, #1
	str r0, rand_seed
	bx lr
// end rand

.data
// game assets and data here =======================================================================

/*
struct Pixmap {
	width: u16,
	height: u16,
	transparency: u16,
	pixelData: [u16; width * height], // variable-length struct
}
*/
.EQU PIXMAP_FIELD_WIDTH, 0
.EQU PIXMAP_FIELD_HEIGHT, 2
.EQU PIXMAP_FIELD_ANCHORX, 4
.EQU PIXMAP_FIELD_ANCHERY, 6
.EQU PIXMAP_FIELD_TRANSPARENCY, 8
.EQU PIXMAP_FIELD_PIXELDATA, 10

.align 2
// let mut shipSkinArray: [&Pixmap; 3];
shipSkinArray:
	.long shipSkinLeft
	.long shipSkinForward
	.long shipSkinRight

.align 1
shipSkinForward:
	.hword 32, 32, 16, 16, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x96bc, 0x96bc
	.hword 0x96bc, 0x96bc, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0x7bef, 0x96bc
	.hword 0x96bc, 0x96bc, 0x96bc, 0x96bc, 0x96bc, 0x7bef, 0xfd58, 0xfd58, 0x7bef, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xfd58, 0x7bef
	.hword 0xbe17, 0xbe17, 0x96bc, 0x96bc, 0x96bc, 0x96bc, 0xbe17, 0xbe17, 0x7bef, 0xfd58
	.hword 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17
	.hword 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0xfe21, 0xfe21, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfe21, 0xfe21, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfe21, 0xfbe4, 0xfbe4, 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfbe4
	.hword 0xfbe4, 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xfbe4, 0xfe21, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfe21, 0xfbe4, 0xfbe4, 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xfbe4, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21
	.hword 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xfe21, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfe21, 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfe21, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58

.align 1
shipSkinLeft:
	.hword 32, 32, 16, 16, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef
	.hword 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef
	.hword 0x96bc, 0x96bc, 0x96bc, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0x96bc, 0x96bc, 0x96bc, 0x96bc, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x7bef, 0x96bc, 0x96bc, 0x96bc, 0x96bc, 0xbe17, 0xbe17, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0x7bef
	.hword 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x96bc, 0x96bc, 0x96bc, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x96bc, 0x96bc, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfe21, 0xfe21, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xfd58, 0xfd58, 0x7bef
	.hword 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfe21, 0xfbe4, 0xfbe4, 0xfe21
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef
	.hword 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfe21, 0xfbe4
	.hword 0xfbe4, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef
	.hword 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfe21, 0xfbe4, 0xfbe4, 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfe21, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef
	.hword 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xfe21, 0xfe21, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0x7bef, 0xfe21, 0xfbe4, 0xfbe4
	.hword 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfe21
	.hword 0xfbe4, 0xfbe4, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfe21, 0xfbe4, 0xfbe4, 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17
	.hword 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfe21, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfe21, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58

.align 1
shipSkinRight:
	.hword 32, 32, 16, 16, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x96bc, 0x96bc, 0x96bc, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x96bc, 0x96bc, 0x96bc, 0x96bc, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0x96bc, 0x96bc
	.hword 0x96bc, 0x96bc, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x96bc, 0x96bc, 0x96bc, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x96bc, 0x96bc, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21
	.hword 0xfe21, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfe21, 0xfbe4, 0xfbe4, 0xfe21, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17
	.hword 0x7bef, 0xfd58, 0xfd58, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfbe4, 0xfbe4, 0xfbe4, 0xfe21, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfbe4, 0xfbe4, 0xfe21, 0xfd58, 0xfd58, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfe21, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfe21, 0xfe21, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0xbe17
	.hword 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfbe4, 0xfbe4, 0xfe21, 0x7bef, 0xbe17, 0x7bef
	.hword 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xfbe4, 0xfbe4, 0xfe21, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfbe4, 0xfbe4, 0xfe21
	.hword 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21, 0xfe21
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfe21
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58

.align 2
// let mut bulletSkinArray: [&Pixmap; 3];
bulletSkinArray:
	.long bulletSkinLeft
	.long bulletSkinForward
	.long bulletSkinRight

.align 1
bulletSkinLeft:
	.hword 8, 8, 2, 2, 0xfd58
	.hword 0x7eff, 0x7f1f, 0x6f1f, 0x86fe, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7f1f, 0x2496
	.hword 0x24d8, 0x2c95, 0x9ebb, 0xfd58, 0xfd58, 0xfd58, 0x771f, 0x1cb7, 0x14f9, 0x14b7
	.hword 0x8edd, 0xfd58, 0xfd58, 0xfd58, 0x86de, 0x2c75, 0x24f8, 0x24d8, 0x3475, 0x96dc
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9e7b, 0x8ebe, 0x3456, 0x3497, 0x86be, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9e9d, 0x8ebf, 0x4435, 0xa67b, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xa65b, 0xae9b, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xae7a


.align 1
bulletSkinForward:
	.hword 8, 8, 4, 3, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x8ede, 0x8ede, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x86bd, 0x34d7, 0x2c96, 0x8ebe, 0xfd58, 0xfd58, 0xfd58, 0x9ebc, 0x24d8, 0xcfa
	.hword 0xcda, 0x2497, 0x9e9c, 0xfd58, 0xfd58, 0x9e9c, 0x1cb8, 0x51b, 0xd1b, 0x24b9
	.hword 0x965b, 0xfd58, 0xfd58, 0xfd58, 0x7f1f, 0x14d9, 0x1cd9, 0x7edf, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x8ede, 0x34b6, 0x2c55, 0x96bd, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x4c33, 0xa69c, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xa67b
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58

.align 1
bulletSkinRight:
	.hword 8, 8, 6, 2, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x86fe, 0x6f1f, 0x7f1f, 0x7eff, 0xfd58, 0xfd58
	.hword 0xfd58, 0x9ebb, 0x2c95, 0x24d8, 0x2496, 0x7f1f, 0xfd58, 0xfd58, 0xfd58, 0x8edd
	.hword 0x14b7, 0x14f9, 0x1cb7, 0x771f, 0xfd58, 0xfd58, 0x96dc, 0x3475, 0x24d8, 0x24f8
	.hword 0x2c75, 0x86de, 0xfd58, 0xfd58, 0x86be, 0x3497, 0x3456, 0x8ebe, 0x9e7b, 0xfd58
	.hword 0xfd58, 0xa67b, 0x4435, 0x8ebf, 0x9e9d, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xae9b
	.hword 0xa65b, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xae7a, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58

.align 1
asteroidSkin:
	.hword 64, 64, 32, 32, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5
	.hword 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x6992, 0x6992, 0x6992, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x6992, 0x6992
	.hword 0x93d8, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x93d8, 0x93d8, 0x93d8
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0x6992, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x6992
	.hword 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5
	.hword 0x93d8, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0x6992, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8
	.hword 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x30ca, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992
	.hword 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992
	.hword 0x6992, 0x6992, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x93d8, 0x93d8, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5
	.hword 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992
	.hword 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x93d8, 0x93d8, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x30ca
	.hword 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x72d5, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x93d8, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x93d8, 0x93d8
	.hword 0x93d8, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x72d5, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x93d8, 0x93d8, 0xb519, 0xb519
	.hword 0xb519, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992
	.hword 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5
	.hword 0x93d8, 0x93d8, 0xb519, 0xb519, 0x6992, 0x6992, 0xb519, 0xb519, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0xb519, 0xb519, 0x6992, 0xb519
	.hword 0xb519, 0x93d8, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8, 0x6992, 0x6992, 0x6992, 0x6992, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca
	.hword 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8, 0x93d8
	.hword 0xb519, 0xb519, 0x6992, 0xb519, 0x93d8, 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8
	.hword 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992, 0x6992, 0x6992
	.hword 0xb519, 0xb519, 0xb519, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0xb519, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x6992
	.hword 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0x6992, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992, 0x6992
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0xb519, 0x6992
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5
	.hword 0x93d8, 0x93d8, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992
	.hword 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992, 0x6992
	.hword 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x6992, 0x6992
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0x6992, 0x6992, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8, 0x93d8
	.hword 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0xb519, 0xb519, 0xb519, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992
	.hword 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992, 0xb519, 0xb519, 0x93d8
	.hword 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x6992, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0xb519, 0x6992
	.hword 0x6992, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x6992, 0x6992
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0xb519, 0xb519
	.hword 0xb519, 0xb519, 0xb519, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5
	.hword 0x93d8, 0x93d8, 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8, 0x6992, 0x6992, 0x6992
	.hword 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x6992, 0x6992, 0x6992, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0xb519, 0xb519, 0xb519, 0xb519, 0x93d8
	.hword 0x93d8, 0x93d8, 0x6992, 0x6992, 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca
	.hword 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x93d8
	.hword 0x93d8, 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0xb519
	.hword 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0xb519, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x93d8
	.hword 0x93d8, 0x6992, 0x6992, 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca
	.hword 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca
	.hword 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca
	.hword 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x93d8
	.hword 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8, 0x93d8
	.hword 0x93d8, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca
	.hword 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x6992
	.hword 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x6992, 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca
	.hword 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x72d5, 0x72d5, 0x72d5, 0x72d5
	.hword 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x72d5, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x30ca, 0x30ca, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca, 0x30ca, 0x30ca
	.hword 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca
	.hword 0x30ca, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca
	.hword 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x6992, 0x6992
	.hword 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x6992, 0x30ca
	.hword 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x30ca, 0x30ca
	.hword 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca
	.hword 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x30ca, 0x30ca, 0x30ca, 0x30ca
	.hword 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0x30ca, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58

.align 1
cometSkin:
	.hword 32, 32, 12, 22, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfaa0
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfaa0
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0
	.hword 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfaa0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfaa0, 0xfbe0, 0xfbe0, 0xfaa0, 0xfd58, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfaa0, 0xfbe0, 0xfbe0, 0xfd58, 0xfd58, 0xfaa0, 0xfaa0, 0xfaa0
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfbe0, 0xfaa0, 0xfd58, 0xfaa0, 0xfbe0
	.hword 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfaa0, 0xfbe0, 0xfaa0, 0xfd58
	.hword 0xfbe0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0
	.hword 0xfd58, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfde1, 0xfbe0, 0xfaa0
	.hword 0xfd58, 0xfaa0, 0xfaa0, 0xfd58, 0xfaa0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfaa0, 0xfd58, 0xfaa0, 0xfd58, 0xfd58, 0xfaa0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfde1
	.hword 0xfaa0, 0xfaa0, 0xfaa0, 0xfbe0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfaa0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfbe0
	.hword 0xfbe0, 0xfde1, 0xfde1, 0xfaa0, 0xfde1, 0xfaa0, 0xfbe0, 0xfaa0, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfaa0, 0xfaa0, 0xfaa0, 0xfbe0, 0xfbe0, 0xfde1, 0xfde1, 0xfde1
	.hword 0xfde1, 0xfde1, 0xfde1, 0xff60, 0xfaa0, 0xfde1, 0xfde1, 0xfaa0, 0xfaa0, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfbe0, 0xfbe0, 0x92c7, 0x92c7, 0x9329, 0x9329
	.hword 0x9329, 0x92c7, 0x92c7, 0xff60, 0xff60, 0xfde1, 0xfde1, 0xff60, 0xfaa0, 0xfbe0
	.hword 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfbe0, 0x92c7, 0x9329, 0x9329, 0x6a46
	.hword 0x9329, 0x9329, 0x9329, 0x9329, 0x9329, 0x92c7, 0xfde1, 0xff60, 0xff60, 0xfde1
	.hword 0xfbe0, 0xfbe0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfbe0, 0x92c7, 0x9329, 0x9329
	.hword 0x6a46, 0x9329, 0x6a46, 0x6a46, 0x6a46, 0x9329, 0x9329, 0x9329, 0x92c7, 0xfde1
	.hword 0xff60, 0xfbe0, 0xfbe0, 0xfaa0, 0xfbe0, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0x92c7, 0x9329
	.hword 0x9329, 0x6a46, 0xcfb6, 0xcfb6, 0xcfb6, 0x6a46, 0x6a46, 0xbd12, 0x9329, 0x9329
	.hword 0x92c7, 0x92c7, 0xff60, 0xfbe0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfaa0
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfbe0
	.hword 0x92c7, 0x9329, 0xb48e, 0xb48e, 0xb48e, 0xb48e, 0xb48e, 0xb48e, 0xb48e, 0xbd12
	.hword 0x9329, 0x9329, 0x9329, 0x92c7, 0x92c7, 0xfde1, 0xfbe0, 0xfbe0, 0xfd58, 0xfd58
	.hword 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfaa0, 0xfbe0, 0x9329, 0xb48e, 0xb48e, 0xb48e, 0xb48e, 0xb48e, 0xbd12, 0x6a46
	.hword 0x9329, 0x6a46, 0xbd12, 0x9329, 0x9329, 0x92c7, 0x92c7, 0xfde1, 0xfde1, 0xfaa0
	.hword 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfaa0, 0x92c7, 0x9329, 0xb48e, 0xb48e, 0xb48e, 0xb48e, 0xb48e
	.hword 0x6a46, 0x9329, 0xb48e, 0x92c7, 0x92c7, 0x6a46, 0x9329, 0x92c7, 0x6a46, 0xfde1
	.hword 0xfaa0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0x92c7, 0x9329, 0xbd12, 0x6a46, 0x6a46
	.hword 0xb48e, 0xb48e, 0x6a46, 0xb48e, 0x92c7, 0x92c7, 0xcfb6, 0x6a46, 0x9329, 0x92c7
	.hword 0x6a46, 0xfbe0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0x92c7, 0x9329, 0x6a46
	.hword 0xb48e, 0xcfb6, 0x6a46, 0xb48e, 0x6a46, 0xcfb6, 0xcfb6, 0x6a46, 0x6a46, 0x9329
	.hword 0x9329, 0x92c7, 0x6a46, 0xfbe0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0x92c7
	.hword 0x9329, 0x9329, 0x9329, 0x92c7, 0x92c7, 0xb48e, 0xb48e, 0xb48e, 0xb48e, 0xb48e
	.hword 0xbd12, 0x9329, 0x92c7, 0x6a46, 0x92c7, 0xfbe0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfaa0, 0xfbe0, 0x9329, 0x6a46, 0xcfb6, 0xcfb6, 0x6a46, 0xbd12, 0xb48e, 0xbd12
	.hword 0xbd12, 0xbd12, 0x9329, 0x9329, 0x92c7, 0x6a46, 0x92c7, 0xfaa0, 0xfaa0, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfbe0, 0x92c7, 0x9329, 0xb48e, 0xb48e, 0xbd12, 0xbd12
	.hword 0xbd12, 0xbd12, 0xbd12, 0x9329, 0x9329, 0x92c7, 0x6a46, 0x6a46, 0xfbe0, 0xfaa0
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfbe0, 0x92c7, 0x9329, 0x9329
	.hword 0xb48e, 0xb48e, 0xb48e, 0x9329, 0x9329, 0x9329, 0x9329, 0x6a46, 0x6a46, 0x92c7
	.hword 0xfbe0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfbe0
	.hword 0x92c7, 0x9329, 0x9329, 0x9329, 0x9329, 0x9329, 0x9329, 0x92c7, 0x6a46, 0x6a46
	.hword 0x92c7, 0xfbe0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfaa0, 0xfbe0, 0x92c7, 0x92c7, 0x92c7, 0x92c7, 0x92c7, 0x6a46, 0x6a46
	.hword 0x92c7, 0x92c7, 0xfbe0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfbe0, 0xfbe0, 0x92c7, 0x92c7, 0x92c7
	.hword 0x92c7, 0xfbe0, 0xfbe0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfaa0, 0xfaa0
	.hword 0xfaa0, 0xfaa0, 0xfaa0, 0xfaa0, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58

.align 2
// let itemSkinArray: [&Pixmap; 8];
itemSkinArray:
	.long itemSkinMineral
	.long itemSkinHealthKit
	.long itemSkinInvulnerability
	.long itemSkinUpgradeMaxHealth
	.long itemSkinUpgradeBulletSpeed
	.long itemSkinUpgradeBulletDamage
	.long itemSkinUpgradeFireRate
	.long itemSkinUpgradeMaxSpeed

.align 1
itemSkinHealthKit:
	.hword 16, 16, 8, 8, 0xfd58
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xe0c4, 0xe0c4, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xe0c4
	.hword 0xe0c4, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0xbe17, 0xbe17, 0xe0c4, 0xe0c4, 0xe0c4, 0xe0c4, 0xe0c4, 0xe0c4, 0xbe17
	.hword 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xe0c4
	.hword 0xe0c4, 0xe0c4, 0xe0c4, 0xe0c4, 0xe0c4, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xe0c4, 0xe0c4, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xe0c4, 0xe0c4, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0x9a53, 0xfd58
	.hword 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef
	.hword 0x7bef, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53
.align 1
itemSkinMineral:
	.hword 16, 16, 8, 8, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xc5fc, 0x9a53, 0xc5fc, 0x9a53
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xc5fc, 0x9a53, 0xc5fc, 0xc5fc, 0xc5fc, 0xc5fc, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xc5fc, 0xc5fc, 0xc5fc
	.hword 0xc5fc, 0x9a53, 0xc5fc, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xc5fc, 0xc5fc, 0x9a53, 0xc5fc, 0x9a53, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xc5fc
	.hword 0x9a53, 0xc5fc, 0xc5fc, 0xc5fc, 0xc5fc, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xc5fc, 0x9a53, 0xc5fc, 0x9a53
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58


.align 1
itemSkinInvulnerability:
	.hword 16, 16, 8, 8, 0xfd58
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xfbe4, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xff60
	.hword 0xff60, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xff60, 0xff60, 0xfbe4, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfbe4, 0xff60, 0xff60, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfbe4, 0xfbe4, 0xfbe4, 0xfbe4, 0xfbe4, 0xfbe4, 0xff60, 0xff60, 0xff60, 0xff60
	.hword 0xfbe4, 0xfbe4, 0xfbe4, 0xfbe4, 0xfbe4, 0xfbe4, 0xfd58, 0xfbe4, 0xff60, 0xff60
	.hword 0xff60, 0xff60, 0xff60, 0xff60, 0xff60, 0xff60, 0xff60, 0xff60, 0xff60, 0xff60
	.hword 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xff60, 0xff60, 0xff60, 0x0, 0xff60
	.hword 0xff60, 0x0, 0xff60, 0xff60, 0xff60, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfbe4, 0xff60, 0xff60, 0x0, 0xff60, 0xff60, 0x0, 0xff60, 0xff60
	.hword 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xff60
	.hword 0x0, 0xff60, 0xff60, 0x0, 0xff60, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xff60, 0xff60, 0xff60, 0xff60, 0xff60
	.hword 0xff60, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfbe4, 0xff60, 0xff60, 0xff60, 0xff60, 0xff60, 0xff60, 0xfbe4, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xff60, 0xff60, 0xff60, 0xfbe4
	.hword 0xfbe4, 0xff60, 0xff60, 0xff60, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58
	.hword 0xfd58, 0xfbe4, 0xff60, 0xff60, 0xfbe4, 0xfd58, 0xfd58, 0xfbe4, 0xff60, 0xff60
	.hword 0xfbe4, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfbe4, 0xff60, 0xff60, 0xfbe4
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfbe4, 0xff60, 0xff60, 0xfbe4, 0xfd58, 0x9a53
	.hword 0x9a53, 0x9a53, 0xfbe4, 0xfbe4, 0xfbe4, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfbe4, 0xfbe4, 0xfbe4, 0x9a53, 0x9a53

.align 1
itemSkinUpgradeMaxHealth:
	.hword 16, 16, 8, 8, 0xfd58
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0x7bef
	.hword 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xfd58
	.hword 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xfd58
	.hword 0xfd58, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0x9a53, 0xfd58, 0xfd58
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x2569, 0x2569, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0x2569, 0x2569, 0x2569, 0x2569, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0x2569, 0x2569, 0x2569
	.hword 0x2569, 0x2569, 0x2569, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x2569, 0x2569, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0x2569, 0x2569, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0x2569, 0x2569, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef
	.hword 0xbe17, 0xbe17, 0xbe17, 0x2569, 0x2569, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53

.align 1
itemSkinUpgradeBulletSpeed:
	.hword 16, 16, 8, 8, 0xfd58
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xb3ca, 0xb3ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xb3ca, 0xb3ca
	.hword 0xb3ca, 0xb3ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xb3ca, 0xb3ca, 0xb3ca, 0xb3ca, 0xb3ca, 0xb3ca, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xb3ca
	.hword 0xb3ca, 0xb3ca, 0xb3ca, 0xb3ca, 0xb3ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xb3ca, 0xb3ca, 0xb3ca, 0xb3ca, 0xb3ca
	.hword 0xb3ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xb3ca, 0xb3ca, 0xb3ca, 0xb3ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xbe17, 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xbe17
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xbe17, 0xfd58
	.hword 0xbe17, 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xbe17, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xbe17, 0xfd58, 0xfd58, 0xbe17
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xbe17, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xbe17, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xfd58, 0xbe17, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xbe17, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53

.align 1
itemSkinUpgradeBulletDamage:
	.hword 16, 16, 8, 8, 0xfd58
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x7bef, 0xfbe4, 0x7bef, 0x7bef, 0xfbe4, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xfbe4, 0x7bef
	.hword 0x7bef, 0xfbe4, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xfbe4, 0x7bef, 0x7bef, 0xfbe4, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef
	.hword 0xfbe4, 0x7bef, 0x7bef, 0xfbe4, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xfbe4, 0x7bef, 0x7bef, 0xfbe4
	.hword 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x3186, 0x3186
	.hword 0x3186, 0x3186, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x3186, 0x3186
	.hword 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186
	.hword 0x3186, 0x3186, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x3186, 0x3186, 0x3186, 0x3186
	.hword 0x3186, 0x3186, 0x3186, 0x3186, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0x3186, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x3186, 0x3186, 0x3186, 0x3186, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53

.align 1
itemSkinUpgradeFireRate:
	.hword 16, 16, 8, 8, 0xfd58
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xb3ca, 0xb3ca
	.hword 0xfd58, 0xb3ca, 0xb3ca, 0xfd58, 0xb3ca, 0xb3ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xb3ca, 0xb3ca, 0xfd58, 0xb3ca, 0xb3ca, 0xfd58
	.hword 0xb3ca, 0xb3ca, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x8002, 0x8002, 0xfd58, 0x8002, 0x8002, 0xfd58, 0x8002, 0x8002, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x8002, 0x8002, 0xfd58, 0x8002
	.hword 0x8002, 0xfd58, 0x8002, 0x8002, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x8002, 0x8002, 0xfd58, 0x8002, 0x8002, 0xfd58, 0x8002, 0x8002
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x8002, 0x8002
	.hword 0xfd58, 0x8002, 0x8002, 0xfd58, 0x8002, 0x8002, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x8002, 0x8002, 0xfd58, 0x8002, 0x8002, 0xfd58
	.hword 0x8002, 0x8002, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x8002, 0x8002, 0xfd58, 0x8002, 0x8002, 0xfd58, 0x8002, 0x8002, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x9a53
	.hword 0x9a53, 0x9a53, 0x9a53, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0x9a53, 0x9a53, 0x9a53

.align 1
itemSkinUpgradeMaxSpeed:
	.hword 16, 16, 8, 8, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0x7bef, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17
	.hword 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17
	.hword 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0x7bef
	.hword 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0x7bef, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0x7bef, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0x7bef, 0xbe17
	.hword 0xbe17, 0x7bef, 0xbe17, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0x7bef, 0xbe17, 0x7bef, 0xbe17, 0xbe17, 0x7bef, 0xbe17, 0x7bef
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef
	.hword 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0x7bef, 0xfd58, 0xff60, 0xfbe4, 0xfbe4, 0xff60
	.hword 0xfd58, 0x7bef, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xff60, 0xfbe4, 0xfbe4, 0xfbe4, 0xfbe4, 0xff60, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xff60, 0xfbe4, 0xfbe4
	.hword 0xfbe4, 0xfbe4, 0xff60, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xff60, 0xfbe4, 0xfbe4, 0xff60, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfbe4, 0xff60, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xff60, 0xfd58, 0xfd58
	.hword 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58, 0xfd58
