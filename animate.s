

.data

// controller interface
.EQU REG_PIX_FRONTBUFFER, 0xff203020 // **PixBuffer
.EQU REG_PIX_BACKBUFFER, 0xff203024 // **PixBuffer
.EQU REG_PIX_STATUS, 0xff20302c

// text buffer address
.EQU TEXT_BUFFER, 0xc9000000 // **TextBuffer

// screen metadata
.EQU PIX_WIDTH, 320 // uint
.EQU PIX_HEIGHT, 240 // uint
.EQU TEXT_WIDTH, 80 // uint
.EQU TEXT_HEIGHT, 60 // uint

// struct definitions

/*
type TextBuffer = [[u8; TEXT_WIDTH]; TEXT_HEIGHT]; // not a regular array;
// the row index can take up 6 bits, the column index can take up 7 bits
// Interpreting buffer as a pointer, the byte at (r, c) is at `buffer + r << 7 + c`.
// Give it a size of 0x2000 (1 << 13)
}
*/
.EQU TEXTBUFFER_ROWSHIFT, 0x80 // (1 << 7)

/*
type PixBuffer = [[u16; PIX_WIDTH]; PIX_HEIGHT], // not a regular array;
// the row index can take up 8 bits, the column index can take up 9 bits
// Interpreting buffer as a pointer, the color at (r, c) is at `buffer + r << 10 + c << 1`.
// Give it a size of 0x40000 (1 << 18)
}
*/
.EQU PIXBUFFER_SIZE, 0x40000 // (1 << 18)
.EQU PIXBUFFER_ROWSHIFT, 0x400 // (1 << 10)

/*
type IdSpace = [[u8; PIX_WIDTH]; PIX_HEIGHT];
*/
.EQU IDSPACE_SIZE, PIX_WIDTH * PIX_HEIGHT

/*
struct Pixmap {
	width: u16,
	height: u16,
	transparency: u16,
	pixelData: [u16; width * height], // variable-length struct
}
*/
.EQU PIXMAP_FIELD_WIDTH, 0
.EQU PIXMAP_FIELD_HEIGHT, 2
.EQU PIXMAP_FIELD_TRANSPARENCY, 4
.EQU PIXMAP_FIELD_PIXELDATA, 6

/*
struct Sprite {
	appearance: *Pixmap,
	xPos: u16,
	width: u16,
	yPos: u16,
	height: u16,
	xVel: i8,
	yVel: i8,
	xAccel: i8,
	yAccel: i8,
}
*/
.EQU SPRITE_FIELD_APPEARANCE, 0
.EQU SPRITE_FIELD_XPOS, 4
.EQU SPRITE_FIELD_WIDTH, 6
.EQU SPRITE_FIELD_YPOS, 8
.EQU SPRITE_FIELD_HEIGHT, 10
.EQU SPRITE_FIELD_XVEL, 12
.EQU SPRITE_FIELD_YVEL, 13
.EQU SPRITE_FIELD_ACCEL, 14
.EQU SPRITE_FIELD_ACCEL, 15
.EQU SPRITE_SIZE, 16

// global data

.align 1
bufferA:
	.skip PIXBUFFER_SIZE

.align 1
bufferB:
	.skip PIXBUFFER_SIZE

.align 0
idSpace:
	.skip IDSPACE_SIZE

// functions
.text

/*
_start
*/
.global _start
_start:
	// initialize stack pointer
	mov sp, #0x800000

	bl setUpDoubleBuffer

	// call main
	bl main

	// idk what to do if execution gets here so just do a useless loop
_start_uselessLoop:
	ror r0, r0, #1
	b _start_uselessLoop
// end _start

/*
main
*/
main:
	push {r4, r5, lr}

	ldr r4, =REG_PIX_BACKBUFFER

	mov r6, #16 // xpos
	mov r7, #100 // ypos
	mov r8, #7 // xvel
	mov r9, #0 // yvel
	mov r10, #1 // yacc

main_loop:
	bl waitVsync
	ldr r5, [r4] // r5 is a pointer to the backbuffer

	mov r0, r5
	mov r1, #0xff
	bl clearVga

	mov r0, r5
	ldr r1, =mario
	mov r2, r6
	mov r3, r7
	bl bitBlit

	bl swapBuffers

	// calculate next frame
	add r6, r6, r8
	cmp r6, #304
	bge bouncex
	cmp r6, #16
	blt bouncex
	b nobouncex
bouncex:
	rsb r8, r8, #0
nobouncex:
	add r7, r7, r9
	add r9, r9, r10
	cmp r7, #224
	bge bouncey
	b nobouncey
bouncey:
	mov r7, #224
	rsb r9, r9, #0
nobouncey:

	b main_loop


	pop {r4, r5, lr}
// end main

/*
setUpDoubleBuffer
*/
setUpDoubleBuffer:
	push {r4, lr}

	ldr r4, =REG_PIX_BACKBUFFER

	// put the buffer address into the backbuffer register
	ldr r0, =bufferA
	str r0, [r4]

	bl swapBuffers
	bl waitVsync

	// put the other buffer address into the backbuffer register
	ldr r0, =bufferB
	str r0, [r4]

	pop {r4, pc}
// end setUpDoubleBuffer

/*
swapBuffers: requests a buffer swap by writing 1 to the frontbuffer register
*/
swapBuffers:
	mov r0, #1
	ldr r1, =REG_PIX_FRONTBUFFER
	str r0, [r1]
	bx lr
// end swapBuffers

/*
waitVsync: blocks until vsync is finished
*/
waitVsync:
	ldr r0, =REG_PIX_STATUS
	ldr r0, [r0]
	and r0, r0, #0x1
	cmp r0, #0
	bne waitVsync
	bx lr
// end waitVsync

/*
clearVga: Fills the video buffer with the specified color

clearVga(buffer: *PixBuffer, color: u16) {
	let color_pair: u32 = (color << 16) | color;
	for row in 0..240 {
		let buffer_row = buffer[row] as *u32; // expand size to write to 4-byte color pairs rather than 2-byte colors
		for col in 0..(320 / 2) { // col doesn't count pixels, but rather pixel pairs
			buffer[col] = colorpair;
		}
	}
}
*/
clearVga:
	// r0 = buffer_row (see outer loop's iteration expression)

	// r1 = colorpair
	orr r1, r1, r1, lsl #16

	// r2 = row
	mov r2, #0
	b clearVga_outerForCond
clearVga_outerForBody:

	// r3 = col
	mov r3, #0
	b clearVga_innerForCond
clearVga_innerForBody:

	str r1, [r0, r3, lsl #2] // storing into a u32 array

	add r3, r3, #1
clearVga_innerForCond:
	cmp r3, #(PIX_WIDTH / 2)
	blo clearVga_innerForBody

	add r2, r2, #1
	add r0, r0, #PIXBUFFER_ROWSHIFT // update pointer to new row
clearVga_outerForCond:
	cmp r2, #PIX_HEIGHT
	blo clearVga_outerForBody

	bx lr
// end clearVga

/*
clearTextBuffer: Fills the text buffer with spaces (ASCII 32)
clearTextBuffer() {
	for row in 0..60 {
		let buffer_row = TEXT_BUFFER[row];
		for col in (0..80).step(4) {
			// expand size to write 4-byte strings rather than single byte characters
			*(buffer_row[col] as *u32) = 0x20202020;
		}
	}
}
*/
clearTextBuffer:
	// r0 = buffer_row (see outer loop's iteration expression)
	mov r0, #TEXT_BUFFER

	// r1 = 0x20202020
	ldr r1, =0x20202020

	// r2 = row
	mov r2, #0
	b clearTextBuffer_outerForCond
clearTextBuffer_outerForBody:

	// r3 = col
	mov r3, #0
	b clearTextBuffer_innerForCond
clearTextBuffer_innerForBody:

	str r1, [r0, r3]

	add r3, r3, #4
clearTextBuffer_innerForCond:
	cmp r3, #TEXT_WIDTH
	blo clearTextBuffer_innerForBody

	add r2, r2, #1
	add r0, r0, #TEXTBUFFER_ROWSHIFT // update pointer to new row
clearTextBuffer_outerForCond:
	cmp r2, #TEXT_HEIGHT
	blo clearTextBuffer_outerForBody

	bx lr
// end clearTextBuffer

/*
bitBlit: Draws the specified Pixmap into the VGA buffer, centered at the specified x and y
coordinates. If the image goes past the VGA screen boundaries, pixels are not drawn.

Pseudocode:
bitBlit(buffer: *PixBuffer, p: *Pixmap, x: i32, y: i32) {
	// convert center coordinates to top left corner coordinates
	let y = y - p.height >> 1;
	let x = x - p.width >> 1;

	// find the portion of the pixmap to draw
	let start_row = max(0, -y);
	let start_col = max(0, -x);
	let end_row = min(p.height, PIX_HEIGHT - y);
	let end_col = min(p.width, PIX_WIDTH - x);

	for row in start_row..end_row {
		let buffer_row: *u16 = (buffer[y + row] + x) as *u16;
		for col in start_col..end_col {
			let pixel = p.pixeldata[row * p.width + col];
			if pixel != p.transparency {
				buffer[col] = pixel;
			}
		}
	}
}
*/
bitBlit:
	push {r4-r9, lr}

	// r0 = buffer
	// r1 = p
	// r2 = x
	// r3 = y

	// r4 = p.width
	ldrh r4, [r1, #PIXMAP_FIELD_WIDTH]

	// r5 = p.height
	ldrh r5, [r1, #PIXMAP_FIELD_HEIGHT]

	// r2 = x
	sub r2, r2, r4, lsr #1

	// r3 = y
	sub r3, r3, r5, lsr #1

	// r6 = start_col
	rsb r6, r2, #0
	cmp r6, #0
	bgt bitBlit_1
	mov r6, #0
bitBlit_1:

	// r7 = start_row
	rsb r7, r3, #0
	cmp r7, #0
	bgt bitBlit_0
	mov r7, #0
bitBlit_0:

	// r8 = end_col
	rsb r8, r2, #PIX_WIDTH
	cmp r8, r4
	blt bitBlit_3
	mov r8, r4
bitBlit_3:

	// r9 = end_row
	rsb r9, r3, #PIX_HEIGHT
	cmp r9, r5
	blt bitBlit_2
	mov r9, r5
bitBlit_2:

	// From here on, horizontal coordinates are double what they are in the pseudocode, for ease of
	// fetching the halfword values.
	lsl r2, r2, #1
	lsl r4, r4, #1
	lsl r8, r8, #1
	// skip doubling r6 because it gets reset anyway

	// r0 = PIX_BUFFER[y + start_row] + x
	add r0, r0, r3, lsl #10
	add r0, r0, r7, lsl #10
	add r0, r0, r2

	// r3 = p.transparency
	ldrh r3, [r1, #PIXMAP_FIELD_TRANSPARENCY]

	// r1 = p.pixeldata
	add r1, #PIXMAP_FIELD_PIXELDATA

	// r2 = start_col
	lsl r2, r6, #1

	// r7 = row
	// r6 = col

	// outer for loop
	b bitBlit_outerCond
bitBlit_outerBody:

	// r0 = buffer_row (see loop's iteration expression)

	// inner for loop
	mov r6, r2
	b bitBlit_innerCond
bitBlit_innerBody:

	// r5 = pixel
	mla r5, r7, r4, r6
	ldrh r5, [r1, r5]

	// maybe draw pixel
	cmp r5, r3
	beq bitBlit_skipDraw
	strh r5, [r0, r6]
bitBlit_skipDraw:

	add r6, r6, #2
bitBlit_innerCond:
	cmp r6, r8
	blt bitBlit_innerBody

	add r0, r0, #0x400 // update pointer to new row (0x400 is 1 << 10)
	add r7, r7, #1
bitBlit_outerCond:
	cmp r7, r9
	blt bitBlit_outerBody

	pop {r4-r9, pc}
// end bitBlit

// assets
.data

.align 1
simplePix:
	.hword 8, 8, 0xfffe
	.hword 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4
	.hword 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4
	.hword 0xc4c4, 0xc4c4, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xc4c4, 0xc4c4
	.hword 0xc4c4, 0xc4c4, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xc4c4, 0xc4c4
	.hword 0xc4c4, 0xc4c4, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xc4c4, 0xc4c4
	.hword 0xc4c4, 0xc4c4, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xc4c4, 0xc4c4
	.hword 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4
	.hword 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4, 0xc4c4

.align 1
mario:
	.hword 64, 32, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7de, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xf7ff, 0xf7ff, 0xf7de, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef7d, 0xc40f, 0xbb8d
	.hword 0xbb8e, 0xbb8e, 0xbb8e, 0xbb8e, 0xbb8e, 0xbb8e, 0xbb8e, 0xc410, 0xef7d, 0xf7be
	.hword 0xf7be, 0xef7c, 0xd615, 0xd5f4, 0xd5f4, 0xd614, 0xd5f4, 0xde36, 0xef9d, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7de, 0xef5d, 0xa165, 0x9082, 0x98a2, 0x98a2, 0x90a3, 0x90c3, 0x90c3, 0x90c3
	.hword 0x90a2, 0x9986, 0xef5c, 0xf7de, 0xf7de, 0xef3b, 0xc4ee, 0xc4cd, 0xc4cd, 0xc4cd
	.hword 0xc4cd, 0xcd50, 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xef7d, 0xbb4d, 0xaa89, 0x9924, 0x98e3, 0x98e3, 0x98e4
	.hword 0x98e3, 0x98e4, 0x98e4, 0x9904, 0x9904, 0x9924, 0xaa8a, 0xb2aa, 0xaaaa, 0xaa89
	.hword 0xa206, 0xa247, 0xc4ce, 0xc4ee, 0xc4ee, 0xcd50, 0xef9d, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef5c, 0xa186, 0x9082
	.hword 0x90e3, 0x90e3, 0x90e3, 0x90e3, 0x9904, 0x9904, 0x9924, 0x9924, 0x9104, 0x9104
	.hword 0x90e3, 0x90e3, 0x90c3, 0x90e3, 0x98e3, 0x9965, 0xbc8d, 0xc4ce, 0xbcad, 0xcd30
	.hword 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7de, 0xef7d, 0x69c6, 0x50c2, 0x5903, 0x5903, 0x50e3, 0x5924, 0xb40c, 0xbc6d
	.hword 0xbc6d, 0xb40c, 0x4165, 0x4185, 0xb42c, 0xc48e, 0xde38, 0xcd55, 0x9904, 0x9904
	.hword 0x9985, 0x9985, 0x9965, 0xaa89, 0xef7d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xef9d, 0xdefb, 0xd699, 0x6a27, 0x5964, 0x5103, 0x5103
	.hword 0x5964, 0x61c5, 0xbcad, 0xc50e, 0xc50e, 0xb4ad, 0x2965, 0x3185, 0xbcad, 0xcd50
	.hword 0xef7c, 0xde99, 0x9985, 0x9944, 0x98e4, 0x98e3, 0x90c3, 0xa207, 0xef7d, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef7d, 0x6a07, 0x5964
	.hword 0xb46d, 0xbcad, 0x5964, 0x5123, 0xb46d, 0xc4ee, 0xc4ee, 0xc4ee, 0xc4ee, 0xb48d
	.hword 0x2965, 0x3165, 0xbccd, 0xc50e, 0xc50f, 0xc4ee, 0xbcad, 0xb42c, 0x9104, 0x90e3
	.hword 0x90c3, 0xa208, 0xef7d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xef7c, 0x61c6, 0x5102, 0xb48d, 0xc4ce, 0x5964, 0x5123, 0x9baa, 0xac0c
	.hword 0xbccd, 0xc4ee, 0xc4ee, 0xbcad, 0x5247, 0x5247, 0x9beb, 0xa40c, 0xbccd, 0xc4cd
	.hword 0xc4ee, 0xbc6d, 0x9a06, 0x99a5, 0x90e3, 0xa208, 0xef7d, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef7d, 0x61c6, 0x5102, 0xbc8d, 0xc4ce
	.hword 0x5943, 0x48c2, 0x48c2, 0x5103, 0xb46d, 0xc4ee, 0xc4ce, 0xc4ce, 0xcd0e, 0xb48d
	.hword 0x2945, 0x3185, 0xbcad, 0xc4ee, 0xc4ee, 0xc4ee, 0xc50e, 0xb46d, 0x90a2, 0xa1c7
	.hword 0xef7d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef7d
	.hword 0x61c6, 0x48e2, 0x8b29, 0x9369, 0x7a87, 0x7a67, 0x7a67, 0x7aa7, 0xbc8d, 0xc4ce
	.hword 0xc4ce, 0xbcad, 0x8b8a, 0x7b29, 0x2944, 0x2965, 0x834a, 0x836a, 0x836a, 0x8b6a
	.hword 0xab4a, 0xab4a, 0xb32c, 0xbc0f, 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xef7d, 0x59a5, 0x4081, 0x4081, 0x48c2, 0xb48d, 0xc50e
	.hword 0xc4ee, 0xc4ee, 0xbccd, 0xbccd, 0xc4ce, 0xb46d, 0x2124, 0x18c3, 0x1904, 0x1904
	.hword 0x18e3, 0x18e4, 0x1904, 0x2904, 0x88a2, 0xa1c7, 0xf7be, 0xf7ff, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d, 0xb554, 0xacd2
	.hword 0xacf2, 0xacf2, 0xbcce, 0xbccd, 0xbccd, 0xbccd, 0xbccd, 0xbcce, 0xbcce, 0xb4ad
	.hword 0x7b4a, 0x7b29, 0x7b29, 0x7b29, 0x7b29, 0x72e9, 0x6124, 0x68e3, 0x88a3, 0xa1c7
	.hword 0xef7d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7de, 0xf7ff, 0xffff, 0xffff, 0xf7de, 0xc530, 0xbccd, 0xc4cd, 0xbccd
	.hword 0xbcce, 0xbcce, 0xbcce, 0xbcce, 0xc4ee, 0xc4ee, 0xc4ed, 0xc4ee, 0xc4ee, 0xbc6d
	.hword 0x9924, 0x90c3, 0x88a2, 0x99c7, 0xef7d, 0xf7de, 0xf7de, 0xf7de, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xef9d, 0xbb4d, 0xaa89, 0xaaaa, 0xaaaa, 0xaaaa, 0xaa8a
	.hword 0xa206, 0x91e7, 0x5a91, 0x5a91, 0x99e7, 0x99e6, 0x99e6, 0x99e6, 0x99e6, 0x91e7
	.hword 0x5291, 0x5a90, 0x99e6, 0x99c5, 0x88c3, 0x9165, 0xd5b6, 0xde38, 0xf7de, 0xce58
	.hword 0x7aca, 0x93ce, 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d, 0xef9d, 0xf79d, 0xef5c, 0xa1a6, 0x8861
	.hword 0x9082, 0x9082, 0x9082, 0x8882, 0x90a2, 0x80c4, 0x31b2, 0x31b2, 0x88c4, 0x88a3
	.hword 0x88a3, 0x88a3, 0x88a2, 0x80c4, 0x31b2, 0x31b1, 0x80c4, 0x88c3, 0x88c3, 0x99e7
	.hword 0xef9d, 0xf7de, 0xf7bd, 0xb575, 0x4061, 0x61e6, 0xef9d, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d, 0xcdb2, 0xc52f
	.hword 0xc530, 0xc50f, 0x9965, 0x90a2, 0x90c3, 0x90c3, 0x90c3, 0x90c3, 0x90c3, 0x90c3
	.hword 0x80e5, 0x7906, 0x41af, 0x41af, 0x88c4, 0x90c2, 0x90c3, 0x88c3, 0x80e5, 0x7907
	.hword 0x396f, 0x5251, 0xde79, 0xe6da, 0xfffe, 0xce37, 0x61e6, 0x5985, 0x40c2, 0x6a27
	.hword 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xef9d, 0xc530, 0xbcad, 0xbcad, 0xbc8d, 0x99a5, 0x9104, 0x90e3, 0x90c3
	.hword 0x90c3, 0x90c3, 0x90c3, 0x90c3, 0x90c2, 0x88c4, 0x31d2, 0x31d2, 0x78e6, 0x80e4
	.hword 0x80e4, 0x80e4, 0x88e4, 0x7905, 0x3a10, 0x4ad3, 0xd6bc, 0xd6fd, 0xdefd, 0xad35
	.hword 0x40a2, 0x48c2, 0x40c2, 0x6a27, 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d, 0xc530, 0xbc8d, 0xbcad, 0xbcad
	.hword 0xb46c, 0xb42c, 0x9103, 0x8882, 0x90a2, 0x90c2, 0x90c2, 0x90c2, 0x90c2, 0x88c4
	.hword 0x31b1, 0x29d3, 0x31b2, 0x31b2, 0x31b1, 0x31b1, 0x31b1, 0x4230, 0xad24, 0xa4e5
	.hword 0x3a32, 0x31f3, 0x3213, 0x31d0, 0x48e3, 0x48e2, 0x40c2, 0x6a27, 0xef9d, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d
	.hword 0xd5d4, 0xc571, 0xbcce, 0xb48d, 0xc530, 0xc551, 0xaaeb, 0xa269, 0x7927, 0x7107
	.hword 0x7106, 0x7906, 0x78e6, 0x7107, 0x31b1, 0x31f2, 0x4aaf, 0x4aaf, 0x31f2, 0x29d2
	.hword 0x29d3, 0x3a31, 0x9467, 0x8c28, 0x31d1, 0x29b2, 0x29d2, 0x31b0, 0x48e3, 0x48e2
	.hword 0x40a2, 0x6a27, 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf79d, 0xbd0f, 0xac4b, 0xde98, 0xffff
	.hword 0xffff, 0xf7df, 0x4ab4, 0x29b2, 0x29d3, 0x29d2, 0x29d2, 0x29d2, 0x29d2, 0x3a11
	.hword 0xb544, 0xb543, 0x3a31, 0x29b2, 0x29d2, 0x29d2, 0x29b2, 0x29d2, 0x29d2, 0x29d2
	.hword 0x29d2, 0x31b0, 0x40e3, 0x40e2, 0x40a2, 0x6227, 0xef9d, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d
	.hword 0xd615, 0xc572, 0xa470, 0xa491, 0xa4b1, 0x9c91, 0x3a32, 0x29d2, 0x29d2, 0x29d2
	.hword 0x29d2, 0x29d2, 0x29d2, 0x31f2, 0x7bca, 0x7bc9, 0x31f1, 0x29b2, 0x29d2, 0x29d2
	.hword 0x29b2, 0x29b2, 0x29d2, 0x29d2, 0x29d2, 0x31b0, 0x40e3, 0x40c2, 0x40a2, 0x6227
	.hword 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7ff, 0xf7df, 0x61e6, 0x4060, 0x40a1, 0x40a2
	.hword 0x31b0, 0x29d3, 0x29d2, 0x29d2, 0x29d2, 0x29d2, 0x29d2, 0x29d2, 0x29b2, 0x29b2
	.hword 0x29d2, 0x29b2, 0x2191, 0x2191, 0x2171, 0x2171, 0x2191, 0x2191, 0x2191, 0x294f
	.hword 0x4082, 0x4081, 0x3860, 0x61e6, 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d, 0x9c2f, 0x7b2b
	.hword 0x5144, 0x48c2, 0x48e2, 0x48e3, 0x31b0, 0x29d3, 0x29d2, 0x29d2, 0x29d2, 0x29d2
	.hword 0x29d2, 0x29b2, 0x29b2, 0x29b2, 0x29b2, 0x3a12, 0x94d8, 0x9d18, 0x9d18, 0x9d18
	.hword 0x9d18, 0x9d18, 0x9d18, 0x9d17, 0xa4b2, 0xa4b1, 0xa4b1, 0xb554, 0xef9d, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xef9d, 0x61e6, 0x3861, 0x40c2, 0x48e2, 0x40c2, 0x40c2, 0x2990, 0x29b2
	.hword 0x29b2, 0x29b2, 0x29b2, 0x29b1, 0x29b1, 0x29b1, 0x29b1, 0x29b1, 0x2191, 0x4253
	.hword 0xef9d, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xfffe, 0xf7ff, 0xf7ff
	.hword 0xf7ff, 0xf7de, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d, 0x6207, 0x40a1, 0x40c2, 0x40c2
	.hword 0xa4b2, 0xce17, 0xbe1a, 0xbe1b, 0xbe1a, 0xbe1a, 0xbe1a, 0xbe1a, 0xbe1a, 0xbe1a
	.hword 0xbe1a, 0xbe1a, 0xbe1a, 0xc65b, 0xef9d, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xef9d
	.hword 0x6a48, 0x4903, 0x4924, 0x4924, 0xce58, 0xffff, 0xf7de, 0xf7de, 0xf7de, 0xf7de
	.hword 0xf7de, 0xf7de, 0xf7de, 0xf7de, 0xf7de, 0xf7de, 0xf7de, 0xf7de, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xdefa, 0xdeba, 0xdeba, 0xdeba, 0xef7d, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7de
	.hword 0xf7de, 0xf7de, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be
	.hword 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be, 0xf7be